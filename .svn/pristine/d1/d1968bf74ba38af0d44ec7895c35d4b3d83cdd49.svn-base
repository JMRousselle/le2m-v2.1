<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>le2m.questcomp.questcompmod</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="le2m-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        <a href="le2m-module.html">Package&nbsp;le2m</a> ::
        <a href="le2m.questcomp-module.html">Package&nbsp;questcomp</a> ::
        Module&nbsp;questcompmod
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="le2m.questcomp.questcompmod-pysrc.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<h1 class="epydoc">Source Code for <a href="le2m.questcomp.questcompmod-module.html">Module le2m.questcomp.questcompmod</a></h1>
<pre class="py-src">
<a name="L1"></a><tt class="py-lineno">  1</tt>  <tt class="py-line"><tt class="py-comment"># -*- coding: utf-8 -*-</tt> </tt>
<a name="L2"></a><tt class="py-lineno">  2</tt>  <tt class="py-line"><tt class="py-name">__author__</tt> <tt class="py-op">=</tt> <tt class="py-docstring">"Dimitri DUBOIS"</tt> </tt>
<a name="L3"></a><tt class="py-lineno">  3</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt class="py-name">PyQt4</tt><tt class="py-op">.</tt><tt class="py-name">QtCore</tt> <tt class="py-keyword">import</tt> <tt class="py-name">QObject</tt><tt class="py-op">,</tt> <tt class="py-name">pyqtSignal</tt> </tt>
<a name="L4"></a><tt class="py-lineno">  4</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt class="py-name">xml</tt><tt class="py-op">.</tt><tt class="py-name">etree</tt> <tt class="py-keyword">import</tt> <tt class="py-name">ElementTree</tt> </tt>
<a name="L5"></a><tt class="py-lineno">  5</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt class="py-name">twisted</tt><tt class="py-op">.</tt><tt class="py-name">spread</tt> <tt class="py-keyword">import</tt> <tt class="py-name">pb</tt> </tt>
<a name="L6"></a><tt class="py-lineno">  6</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">logging</tt> </tt>
<a name="L7"></a><tt class="py-lineno">  7</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt id="link-0" class="py-name" targets="Module le2m.questcomp.questcomputil=le2m.questcomp.questcomputil-module.html"><a title="le2m.questcomp.questcomputil" class="py-name" href="#" onclick="return doclink('link-0', 'questcomputil', 'link-0');">questcomputil</a></tt> <tt class="py-keyword">import</tt> <tt class="py-name">qctrans</tt> </tt>
<a name="L8"></a><tt class="py-lineno">  8</tt>  <tt class="py-line"> </tt>
<a name="L9"></a><tt class="py-lineno">  9</tt>  <tt class="py-line"> </tt>
<a name="L10"></a><tt class="py-lineno"> 10</tt>  <tt class="py-line"><tt id="link-1" class="py-name" targets="Variable le2m.client.clt.logger=le2m.client.clt-module.html#logger,Variable le2m.client.cltgui.cltguidialogs.logger=le2m.client.cltgui.cltguidialogs-module.html#logger,Variable le2m.client.cltremote.logger=le2m.client.cltremote-module.html#logger,Variable le2m.creator.creator.logger=le2m.creator.creator-module.html#logger,Variable le2m.creator.filestocopy.creator_Gui.logger=le2m.creator.filestocopy.creator_Gui-module.html#logger,Variable le2m.creator.filestocopy.creator_Part.logger=le2m.creator.filestocopy.creator_Part-module.html#logger,Variable le2m.creator.filestocopy.creator_Remote.logger=le2m.creator.filestocopy.creator_Remote-module.html#logger,Variable le2m.creator.filestocopy.creator_Serv.logger=le2m.creator.filestocopy.creator_Serv-module.html#logger,Variable le2m.extractor.extractorgui.logger=le2m.extractor.extractorgui-module.html#logger,Variable le2m.parts.Dictator.DictatorGui.logger=le2m.parts.Dictator.DictatorGui-module.html#logger,Variable le2m.parts.Dictator.DictatorPart.logger=le2m.parts.Dictator.DictatorPart-module.html#logger,Variable le2m.parts.Dictator.DictatorRemote.logger=le2m.parts.Dictator.DictatorRemote-module.html#logger,Variable le2m.parts.Dictator.DictatorServ.logger=le2m.parts.Dictator.DictatorServ-module.html#logger,Variable le2m.parts.GneezyPotter.GneezyPotterGui.logger=le2m.parts.GneezyPotter.GneezyPotterGui-module.html#logger,Variable le2m.parts.GneezyPotter.GneezyPotterPart.logger=le2m.parts.GneezyPotter.GneezyPotterPart-module.html#logger,Variable le2m.parts.GneezyPotter.GneezyPotterRemote.logger=le2m.parts.GneezyPotter.GneezyPotterRemote-module.html#logger,Variable le2m.parts.GneezyPotter.GneezyPotterServ.logger=le2m.parts.GneezyPotter.GneezyPotterServ-module.html#logger,Variable le2m.parts.PublicGoodGame.PublicGoodGameGui.logger=le2m.parts.PublicGoodGame.PublicGoodGameGui-module.html#logger,Variable le2m.parts.PublicGoodGame.PublicGoodGamePart.logger=le2m.parts.PublicGoodGame.PublicGoodGamePart-module.html#logger,Variable le2m.parts.PublicGoodGame.PublicGoodGameRemote.logger=le2m.parts.PublicGoodGame.PublicGoodGameRemote-module.html#logger,Variable le2m.parts.PublicGoodGame.PublicGoodGameServ.logger=le2m.parts.PublicGoodGame.PublicGoodGameServ-module.html#logger,Variable le2m.questcomp.questcompgui.logger=le2m.questcomp.questcompgui-module.html#logger,Variable le2m.questcomp.questcompmod.logger=le2m.questcomp.questcompmod-module.html#logger,Variable le2m.questcomp.questcomputil.logger=le2m.questcomp.questcomputil-module.html#logger,Variable le2m.server.serv.logger=le2m.server.serv-module.html#logger,Variable le2m.server.servgest.servgestbase.logger=le2m.server.servgest.servgestbase-module.html#logger,Variable le2m.server.servgest.servgestexpe.logger=le2m.server.servgest.servgestexpe-module.html#logger,Variable le2m.server.servgest.servgestgroups.logger=le2m.server.servgest.servgestgroups-module.html#logger,Variable le2m.server.servgest.servgestgui.logger=le2m.server.servgest.servgestgui-module.html#logger,Variable le2m.server.servgest.servgestplayers.logger=le2m.server.servgest.servgestplayers-module.html#logger,Variable le2m.server.servgui.servguidialogs.logger=le2m.server.servgui.servguidialogs-module.html#logger,Variable le2m.server.servgui.servguiwindows.logger=le2m.server.servgui.servguiwindows-module.html#logger,Variable le2m.server.servparties.logger=le2m.server.servparties-module.html#logger,Variable le2m.server.servplayers.logger=le2m.server.servplayers-module.html#logger,Variable le2m.util.utiltools.logger=le2m.util.utiltools-module.html#logger"><a title="le2m.client.clt.logger
le2m.client.cltgui.cltguidialogs.logger
le2m.client.cltremote.logger
le2m.creator.creator.logger
le2m.creator.filestocopy.creator_Gui.logger
le2m.creator.filestocopy.creator_Part.logger
le2m.creator.filestocopy.creator_Remote.logger
le2m.creator.filestocopy.creator_Serv.logger
le2m.extractor.extractorgui.logger
le2m.parts.Dictator.DictatorGui.logger
le2m.parts.Dictator.DictatorPart.logger
le2m.parts.Dictator.DictatorRemote.logger
le2m.parts.Dictator.DictatorServ.logger
le2m.parts.GneezyPotter.GneezyPotterGui.logger
le2m.parts.GneezyPotter.GneezyPotterPart.logger
le2m.parts.GneezyPotter.GneezyPotterRemote.logger
le2m.parts.GneezyPotter.GneezyPotterServ.logger
le2m.parts.PublicGoodGame.PublicGoodGameGui.logger
le2m.parts.PublicGoodGame.PublicGoodGamePart.logger
le2m.parts.PublicGoodGame.PublicGoodGameRemote.logger
le2m.parts.PublicGoodGame.PublicGoodGameServ.logger
le2m.questcomp.questcompgui.logger
le2m.questcomp.questcompmod.logger
le2m.questcomp.questcomputil.logger
le2m.server.serv.logger
le2m.server.servgest.servgestbase.logger
le2m.server.servgest.servgestexpe.logger
le2m.server.servgest.servgestgroups.logger
le2m.server.servgest.servgestgui.logger
le2m.server.servgest.servgestplayers.logger
le2m.server.servgui.servguidialogs.logger
le2m.server.servgui.servguiwindows.logger
le2m.server.servparties.logger
le2m.server.servplayers.logger
le2m.util.utiltools.logger" class="py-name" href="#" onclick="return doclink('link-1', 'logger', 'link-1');">logger</a></tt> <tt class="py-op">=</tt> <tt class="py-name">logging</tt><tt class="py-op">.</tt><tt class="py-name">getLogger</tt><tt class="py-op">(</tt><tt class="py-string">"questcomp"</tt><tt class="py-op">)</tt> </tt>
<a name="Question"></a><div id="Question-def"><a name="L11"></a><tt class="py-lineno"> 11</tt>  <tt class="py-line"> </tt>
<a name="L12"></a><tt class="py-lineno"> 12</tt>  <tt class="py-line"> </tt>
<a name="L13"></a><tt class="py-lineno"> 13</tt> <a class="py-toggle" href="#" id="Question-toggle" onclick="return toggle('Question');">-</a><tt class="py-line"><tt class="py-keyword">class</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Question-class.html">Question</a><tt class="py-op">(</tt><tt class="py-base-class">object</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Question-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="Question-expanded"><a name="Question.__init__"></a><div id="Question.__init__-def"><a name="L14"></a><tt class="py-lineno"> 14</tt> <a class="py-toggle" href="#" id="Question.__init__-toggle" onclick="return toggle('Question.__init__');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Question-class.html#__init__">__init__</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Question.__init__-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Question.__init__-expanded"><a name="L15"></a><tt class="py-lineno"> 15</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_number</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L16"></a><tt class="py-lineno"> 16</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_text</tt> <tt class="py-op">=</tt> <tt class="py-string">u""</tt> </tt>
<a name="L17"></a><tt class="py-lineno"> 17</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_proposals</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-op">]</tt> </tt>
<a name="L18"></a><tt class="py-lineno"> 18</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_goodanswers</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-op">]</tt> </tt>
<a name="L19"></a><tt class="py-lineno"> 19</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_explanation</tt> <tt class="py-op">=</tt> <tt class="py-string">u""</tt> </tt>
</div><a name="L20"></a><tt class="py-lineno"> 20</tt>  <tt class="py-line"> </tt>
<a name="L21"></a><tt class="py-lineno"> 21</tt>  <tt class="py-line">    <tt class="py-decorator">@</tt><tt class="py-decorator">property</tt> </tt>
<a name="Question.number"></a><div id="Question.number-def"><a name="L22"></a><tt class="py-lineno"> 22</tt> <a class="py-toggle" href="#" id="Question.number-toggle" onclick="return toggle('Question.number');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Question-class.html#number">number</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Question.number-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Question.number-expanded"><a name="L23"></a><tt class="py-lineno"> 23</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_number</tt> </tt>
</div><a name="L24"></a><tt class="py-lineno"> 24</tt>  <tt class="py-line"> </tt>
<a name="L25"></a><tt class="py-lineno"> 25</tt>  <tt class="py-line">    <tt class="py-decorator">@</tt><tt class="py-decorator">number</tt><tt class="py-op">.</tt><tt class="py-name">setter</tt> </tt>
<a name="Question.number"></a><div id="Question.number-def"><a name="L26"></a><tt class="py-lineno"> 26</tt> <a class="py-toggle" href="#" id="Question.number-toggle" onclick="return toggle('Question.number');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Question-class.html#number">number</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">num</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Question.number-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Question.number-expanded"><a name="L27"></a><tt class="py-lineno"> 27</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_number</tt> <tt class="py-op">=</tt> <tt class="py-name">num</tt> </tt>
</div><a name="L28"></a><tt class="py-lineno"> 28</tt>  <tt class="py-line"> </tt>
<a name="L29"></a><tt class="py-lineno"> 29</tt>  <tt class="py-line">    <tt class="py-decorator">@</tt><tt class="py-decorator">property</tt> </tt>
<a name="Question.text"></a><div id="Question.text-def"><a name="L30"></a><tt class="py-lineno"> 30</tt> <a class="py-toggle" href="#" id="Question.text-toggle" onclick="return toggle('Question.text');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Question-class.html#text">text</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Question.text-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Question.text-expanded"><a name="L31"></a><tt class="py-lineno"> 31</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_text</tt> </tt>
</div><a name="L32"></a><tt class="py-lineno"> 32</tt>  <tt class="py-line"> </tt>
<a name="L33"></a><tt class="py-lineno"> 33</tt>  <tt class="py-line">    <tt class="py-decorator">@</tt><tt class="py-decorator">text</tt><tt class="py-op">.</tt><tt class="py-name">setter</tt> </tt>
<a name="Question.text"></a><div id="Question.text-def"><a name="L34"></a><tt class="py-lineno"> 34</tt> <a class="py-toggle" href="#" id="Question.text-toggle" onclick="return toggle('Question.text');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Question-class.html#text">text</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">txt</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Question.text-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Question.text-expanded"><a name="L35"></a><tt class="py-lineno"> 35</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_text</tt> <tt class="py-op">=</tt> <tt class="py-name">txt</tt> </tt>
</div><a name="L36"></a><tt class="py-lineno"> 36</tt>  <tt class="py-line"> </tt>
<a name="L37"></a><tt class="py-lineno"> 37</tt>  <tt class="py-line">    <tt class="py-decorator">@</tt><tt class="py-decorator">property</tt> </tt>
<a name="Question.proposals"></a><div id="Question.proposals-def"><a name="L38"></a><tt class="py-lineno"> 38</tt> <a class="py-toggle" href="#" id="Question.proposals-toggle" onclick="return toggle('Question.proposals');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Question-class.html#proposals">proposals</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Question.proposals-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Question.proposals-expanded"><a name="L39"></a><tt class="py-lineno"> 39</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_proposals</tt> </tt>
</div><a name="L40"></a><tt class="py-lineno"> 40</tt>  <tt class="py-line"> </tt>
<a name="L41"></a><tt class="py-lineno"> 41</tt>  <tt class="py-line">    <tt class="py-decorator">@</tt><tt class="py-decorator">proposals</tt><tt class="py-op">.</tt><tt class="py-name">setter</tt> </tt>
<a name="Question.proposals"></a><div id="Question.proposals-def"><a name="L42"></a><tt class="py-lineno"> 42</tt> <a class="py-toggle" href="#" id="Question.proposals-toggle" onclick="return toggle('Question.proposals');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Question-class.html#proposals">proposals</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">proplist</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Question.proposals-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Question.proposals-expanded"><a name="L43"></a><tt class="py-lineno"> 43</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_proposals</tt> <tt class="py-op">=</tt> <tt class="py-name">proplist</tt> </tt>
</div><a name="L44"></a><tt class="py-lineno"> 44</tt>  <tt class="py-line"> </tt>
<a name="L45"></a><tt class="py-lineno"> 45</tt>  <tt class="py-line">    <tt class="py-decorator">@</tt><tt class="py-decorator">property</tt> </tt>
<a name="Question.goodanswers"></a><div id="Question.goodanswers-def"><a name="L46"></a><tt class="py-lineno"> 46</tt> <a class="py-toggle" href="#" id="Question.goodanswers-toggle" onclick="return toggle('Question.goodanswers');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Question-class.html#goodanswers">goodanswers</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Question.goodanswers-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Question.goodanswers-expanded"><a name="L47"></a><tt class="py-lineno"> 47</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_goodanswers</tt> </tt>
</div><a name="L48"></a><tt class="py-lineno"> 48</tt>  <tt class="py-line"> </tt>
<a name="L49"></a><tt class="py-lineno"> 49</tt>  <tt class="py-line">    <tt class="py-decorator">@</tt><tt class="py-decorator">goodanswers</tt><tt class="py-op">.</tt><tt class="py-name">setter</tt> </tt>
<a name="Question.goodanswers"></a><div id="Question.goodanswers-def"><a name="L50"></a><tt class="py-lineno"> 50</tt> <a class="py-toggle" href="#" id="Question.goodanswers-toggle" onclick="return toggle('Question.goodanswers');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Question-class.html#goodanswers">goodanswers</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">galist</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Question.goodanswers-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Question.goodanswers-expanded"><a name="L51"></a><tt class="py-lineno"> 51</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_goodanswers</tt> <tt class="py-op">=</tt> <tt class="py-name">galist</tt> </tt>
</div><a name="L52"></a><tt class="py-lineno"> 52</tt>  <tt class="py-line"> </tt>
<a name="L53"></a><tt class="py-lineno"> 53</tt>  <tt class="py-line">    <tt class="py-decorator">@</tt><tt class="py-decorator">property</tt> </tt>
<a name="Question.explanation"></a><div id="Question.explanation-def"><a name="L54"></a><tt class="py-lineno"> 54</tt> <a class="py-toggle" href="#" id="Question.explanation-toggle" onclick="return toggle('Question.explanation');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Question-class.html#explanation">explanation</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Question.explanation-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Question.explanation-expanded"><a name="L55"></a><tt class="py-lineno"> 55</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_explanation</tt> </tt>
</div><a name="L56"></a><tt class="py-lineno"> 56</tt>  <tt class="py-line"> </tt>
<a name="L57"></a><tt class="py-lineno"> 57</tt>  <tt class="py-line">    <tt class="py-decorator">@</tt><tt class="py-decorator">explanation</tt><tt class="py-op">.</tt><tt class="py-name">setter</tt> </tt>
<a name="Question.explanation"></a><div id="Question.explanation-def"><a name="L58"></a><tt class="py-lineno"> 58</tt> <a class="py-toggle" href="#" id="Question.explanation-toggle" onclick="return toggle('Question.explanation');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Question-class.html#explanation">explanation</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">expl</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Question.explanation-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Question.explanation-expanded"><a name="L59"></a><tt class="py-lineno"> 59</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_explanation</tt> <tt class="py-op">=</tt> <tt class="py-name">expl</tt> </tt>
</div><a name="L60"></a><tt class="py-lineno"> 60</tt>  <tt class="py-line"> </tt>
<a name="Question.__repr__"></a><div id="Question.__repr__-def"><a name="L61"></a><tt class="py-lineno"> 61</tt> <a class="py-toggle" href="#" id="Question.__repr__-toggle" onclick="return toggle('Question.__repr__');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Question-class.html#__repr__">__repr__</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Question.__repr__-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Question.__repr__-expanded"><a name="L62"></a><tt class="py-lineno"> 62</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">=</tt> <tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"Number {num}"</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">num</tt><tt class="py-op">=</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-2" class="py-name" targets="Variable le2m.questcomp.questcompmod.Question.number=le2m.questcomp.questcompmod.Question-class.html#number"><a title="le2m.questcomp.questcompmod.Question.number" class="py-name" href="#" onclick="return doclink('link-2', 'number', 'link-2');">number</a></tt><tt class="py-op">)</tt> </tt>
<a name="L63"></a><tt class="py-lineno"> 63</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"\nText: {txt}"</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">txt</tt><tt class="py-op">=</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-3" class="py-name" targets="Variable le2m.questcomp.questcompmod.Question.text=le2m.questcomp.questcompmod.Question-class.html#text"><a title="le2m.questcomp.questcompmod.Question.text" class="py-name" href="#" onclick="return doclink('link-3', 'text', 'link-3');">text</a></tt><tt class="py-op">)</tt> </tt>
<a name="L64"></a><tt class="py-lineno"> 64</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"\nProposals: {p}"</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">p</tt><tt class="py-op">=</tt><tt class="py-string">" | "</tt><tt class="py-op">.</tt><tt class="py-name">join</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-4" class="py-name" targets="Variable le2m.questcomp.questcompmod.Question.proposals=le2m.questcomp.questcompmod.Question-class.html#proposals"><a title="le2m.questcomp.questcompmod.Question.proposals" class="py-name" href="#" onclick="return doclink('link-4', 'proposals', 'link-4');">proposals</a></tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L65"></a><tt class="py-lineno"> 65</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"\nGood answers: {ga}"</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt> </tt>
<a name="L66"></a><tt class="py-lineno"> 66</tt>  <tt class="py-line">            <tt class="py-name">ga</tt><tt class="py-op">=</tt><tt class="py-string">" | "</tt><tt class="py-op">.</tt><tt class="py-name">join</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-5" class="py-name" targets="Variable le2m.questcomp.questcompmod.Question.goodanswers=le2m.questcomp.questcompmod.Question-class.html#goodanswers"><a title="le2m.questcomp.questcompmod.Question.goodanswers" class="py-name" href="#" onclick="return doclink('link-5', 'goodanswers', 'link-5');">goodanswers</a></tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L67"></a><tt class="py-lineno"> 67</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"\nExplanation: {exp}"</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">exp</tt><tt class="py-op">=</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-6" class="py-name" targets="Variable le2m.questcomp.questcompmod.Question.explanation=le2m.questcomp.questcompmod.Question-class.html#explanation"><a title="le2m.questcomp.questcompmod.Question.explanation" class="py-name" href="#" onclick="return doclink('link-6', 'explanation', 'link-6');">explanation</a></tt><tt class="py-op">)</tt> </tt>
<a name="L68"></a><tt class="py-lineno"> 68</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">txt</tt> </tt>
</div><a name="L69"></a><tt class="py-lineno"> 69</tt>  <tt class="py-line"> </tt>
<a name="Question.__str__"></a><div id="Question.__str__-def"><a name="L70"></a><tt class="py-lineno"> 70</tt> <a class="py-toggle" href="#" id="Question.__str__-toggle" onclick="return toggle('Question.__str__');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Question-class.html#__str__">__str__</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Question.__str__-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Question.__str__-expanded"><a name="L71"></a><tt class="py-lineno"> 71</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-7" class="py-name" targets="Method le2m.configuration.configvar.Experiment.__repr__()=le2m.configuration.configvar.Experiment-class.html#__repr__,Method le2m.creator.creatorgui.GuiCreator.Configuration.__repr__()=le2m.creator.creatorgui.GuiCreator.Configuration-class.html#__repr__,Method le2m.creator.filestocopy.creator_Texts.TITLE_MSG.__repr__()=le2m.creator.filestocopy.creator_Texts.TITLE_MSG-class.html#__repr__,Method le2m.questcomp.questcompmod.Question.__repr__()=le2m.questcomp.questcompmod.Question-class.html#__repr__,Method le2m.server.servplayers.Joueur.__repr__()=le2m.server.servplayers.Joueur-class.html#__repr__"><a title="le2m.configuration.configvar.Experiment.__repr__
le2m.creator.creatorgui.GuiCreator.Configuration.__repr__
le2m.creator.filestocopy.creator_Texts.TITLE_MSG.__repr__
le2m.questcomp.questcompmod.Question.__repr__
le2m.server.servplayers.Joueur.__repr__" class="py-name" href="#" onclick="return doclink('link-7', '__repr__', 'link-7');">__repr__</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
</div><a name="L72"></a><tt class="py-lineno"> 72</tt>  <tt class="py-line"> </tt>
<a name="Question.tohtml"></a><div id="Question.tohtml-def"><a name="L73"></a><tt class="py-lineno"> 73</tt> <a class="py-toggle" href="#" id="Question.tohtml-toggle" onclick="return toggle('Question.tohtml');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Question-class.html#tohtml">tohtml</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Question.tohtml-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Question.tohtml-expanded"><a name="L74"></a><tt class="py-lineno"> 74</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">=</tt> <tt class="py-string">u"&lt;p&gt;&lt;b&gt;"</tt> </tt>
<a name="L75"></a><tt class="py-lineno"> 75</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"Question {num}"</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">num</tt><tt class="py-op">=</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-8" class="py-name"><a title="le2m.questcomp.questcompmod.Question.number" class="py-name" href="#" onclick="return doclink('link-8', 'number', 'link-2');">number</a></tt><tt class="py-op">)</tt> </tt>
<a name="L76"></a><tt class="py-lineno"> 76</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-string">u"&lt;/b&gt;&lt;br /&gt;&lt;i&gt;"</tt> </tt>
<a name="L77"></a><tt class="py-lineno"> 77</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"Text"</tt><tt class="py-op">)</tt> </tt>
<a name="L78"></a><tt class="py-lineno"> 78</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-string">u"&lt;/i&gt;: {}&lt;br /&gt;&lt;i&gt;"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-9" class="py-name"><a title="le2m.questcomp.questcompmod.Question.text" class="py-name" href="#" onclick="return doclink('link-9', 'text', 'link-3');">text</a></tt><tt class="py-op">)</tt> </tt>
<a name="L79"></a><tt class="py-lineno"> 79</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"Proposals"</tt><tt class="py-op">)</tt> </tt>
<a name="L80"></a><tt class="py-lineno"> 80</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-string">u"&lt;/i&gt;:&lt;ul&gt;"</tt> </tt>
<a name="L81"></a><tt class="py-lineno"> 81</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-name">p</tt> <tt class="py-keyword">in</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-10" class="py-name"><a title="le2m.questcomp.questcompmod.Question.proposals" class="py-name" href="#" onclick="return doclink('link-10', 'proposals', 'link-4');">proposals</a></tt><tt class="py-op">:</tt> </tt>
<a name="L82"></a><tt class="py-lineno"> 82</tt>  <tt class="py-line">            <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-string">u"&lt;li&gt;{}&lt;/li&gt;"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">p</tt><tt class="py-op">)</tt> </tt>
<a name="L83"></a><tt class="py-lineno"> 83</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-string">u"&lt;/ul&gt;&lt;i&gt;"</tt> </tt>
<a name="L84"></a><tt class="py-lineno"> 84</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"Good answers"</tt><tt class="py-op">)</tt> </tt>
<a name="L85"></a><tt class="py-lineno"> 85</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-string">u"&lt;/i&gt;:&lt;ul&gt;"</tt> </tt>
<a name="L86"></a><tt class="py-lineno"> 86</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-name">b</tt> <tt class="py-keyword">in</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-11" class="py-name"><a title="le2m.questcomp.questcompmod.Question.goodanswers" class="py-name" href="#" onclick="return doclink('link-11', 'goodanswers', 'link-5');">goodanswers</a></tt><tt class="py-op">:</tt> </tt>
<a name="L87"></a><tt class="py-lineno"> 87</tt>  <tt class="py-line">            <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-string">u"&lt;li&gt;{}&lt;/li&gt;"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">b</tt><tt class="py-op">)</tt> </tt>
<a name="L88"></a><tt class="py-lineno"> 88</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-string">u"&lt;/ul&gt;&lt;i&gt;"</tt> </tt>
<a name="L89"></a><tt class="py-lineno"> 89</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"Explanation"</tt><tt class="py-op">)</tt> </tt>
<a name="L90"></a><tt class="py-lineno"> 90</tt>  <tt class="py-line">        <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-string">u"&lt;/i&gt;: {}&lt;/p&gt;"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-12" class="py-name"><a title="le2m.questcomp.questcompmod.Question.explanation" class="py-name" href="#" onclick="return doclink('link-12', 'explanation', 'link-6');">explanation</a></tt><tt class="py-op">)</tt> </tt>
<a name="L91"></a><tt class="py-lineno"> 91</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">txt</tt> </tt>
</div></div><a name="L92"></a><tt class="py-lineno"> 92</tt>  <tt class="py-line"> </tt>
<a name="CopyQuestion"></a><div id="CopyQuestion-def"><a name="L93"></a><tt class="py-lineno"> 93</tt>  <tt class="py-line"> </tt>
<a name="L94"></a><tt class="py-lineno"> 94</tt> <a class="py-toggle" href="#" id="CopyQuestion-toggle" onclick="return toggle('CopyQuestion');">-</a><tt class="py-line"><tt class="py-keyword">class</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.CopyQuestion-class.html">CopyQuestion</a><tt class="py-op">(</tt><tt class="py-base-class">Question</tt><tt class="py-op">,</tt> <tt class="py-base-class">pb</tt><tt class="py-op">.</tt><tt class="py-base-class">Copyable</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="CopyQuestion-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="CopyQuestion-expanded"><a name="L95"></a><tt class="py-lineno"> 95</tt>  <tt class="py-line">    <tt class="py-docstring">"""</tt> </tt>
<a name="L96"></a><tt class="py-lineno"> 96</tt>  <tt class="py-line"><tt class="py-docstring">    This class is instanciated in place of question in order to be send</tt> </tt>
<a name="L97"></a><tt class="py-lineno"> 97</tt>  <tt class="py-line"><tt class="py-docstring">    to the remote</tt> </tt>
<a name="L98"></a><tt class="py-lineno"> 98</tt>  <tt class="py-line"><tt class="py-docstring">    """</tt> </tt>
<a name="L99"></a><tt class="py-lineno"> 99</tt>  <tt class="py-line">    <tt class="py-keyword">pass</tt> </tt>
</div><a name="L100"></a><tt class="py-lineno">100</tt>  <tt class="py-line"> </tt>
<a name="Questionnaire"></a><div id="Questionnaire-def"><a name="L101"></a><tt class="py-lineno">101</tt>  <tt class="py-line"> </tt>
<a name="L102"></a><tt class="py-lineno">102</tt> <a class="py-toggle" href="#" id="Questionnaire-toggle" onclick="return toggle('Questionnaire');">-</a><tt class="py-line"><tt class="py-keyword">class</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html">Questionnaire</a><tt class="py-op">(</tt><tt class="py-base-class">QObject</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="Questionnaire-expanded"><a name="L103"></a><tt class="py-lineno">103</tt>  <tt class="py-line"> </tt>
<a name="L104"></a><tt class="py-lineno">104</tt>  <tt class="py-line">    <tt id="link-13" class="py-name" targets="Method le2m.questcomp.questcompmod.Questionnaire.valuechanged()=le2m.questcomp.questcompmod.Questionnaire-class.html#valuechanged"><a title="le2m.questcomp.questcompmod.Questionnaire.valuechanged" class="py-name" href="#" onclick="return doclink('link-13', 'valuechanged', 'link-13');">valuechanged</a></tt> <tt class="py-op">=</tt> <tt class="py-name">pyqtSignal</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L105"></a><tt class="py-lineno">105</tt>  <tt class="py-line"> </tt>
<a name="Questionnaire.__init__"></a><div id="Questionnaire.__init__-def"><a name="L106"></a><tt class="py-lineno">106</tt> <a class="py-toggle" href="#" id="Questionnaire.__init__-toggle" onclick="return toggle('Questionnaire.__init__');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html#__init__">__init__</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire.__init__-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Questionnaire.__init__-expanded"><a name="L107"></a><tt class="py-lineno">107</tt>  <tt class="py-line">        <tt class="py-name">super</tt><tt class="py-op">(</tt><tt id="link-14" class="py-name" targets="Class le2m.questcomp.questcompmod.Questionnaire=le2m.questcomp.questcompmod.Questionnaire-class.html"><a title="le2m.questcomp.questcompmod.Questionnaire" class="py-name" href="#" onclick="return doclink('link-14', 'Questionnaire', 'link-14');">Questionnaire</a></tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt id="link-15" class="py-name" targets="Method le2m.client.clt.Client.__init__()=le2m.client.clt.Client-class.html#__init__,Method le2m.client.cltgui.cltguidialogs.GuiAccueil.__init__()=le2m.client.cltgui.cltguidialogs.GuiAccueil-class.html#__init__,Method le2m.client.cltgui.cltguidialogs.GuiFinal.__init__()=le2m.client.cltgui.cltguidialogs.GuiFinal-class.html#__init__,Method le2m.client.cltgui.cltguidialogs.GuiHistorique.__init__()=le2m.client.cltgui.cltguidialogs.GuiHistorique-class.html#__init__,Method le2m.client.cltgui.cltguidialogs.GuiPopup.__init__()=le2m.client.cltgui.cltguidialogs.GuiPopup-class.html#__init__,Method le2m.client.cltgui.cltguidialogs.GuiQuestionnaireFinal.__init__()=le2m.client.cltgui.cltguidialogs.GuiQuestionnaireFinal-class.html#__init__,Method le2m.client.cltgui.cltguidialogs.GuiRecapitulatif.__init__()=le2m.client.cltgui.cltguidialogs.GuiRecapitulatif-class.html#__init__,Method le2m.client.cltgui.cltguiforms.GuiAttente.__init__()=le2m.client.cltgui.cltguiforms.GuiAttente-class.html#__init__,Method le2m.client.cltgui.cltguitablemodels.TableModelHistorique.__init__()=le2m.client.cltgui.cltguitablemodels.TableModelHistorique-class.html#__init__,Method le2m.client.cltremote.RemoteBase.__init__()=le2m.client.cltremote.RemoteBase-class.html#__init__,Method le2m.client.cltremote.RemoteQuestionnaireFinal.__init__()=le2m.client.cltremote.RemoteQuestionnaireFinal-class.html#__init__,Method le2m.creator.creatorgui.GuiCreator.__init__()=le2m.creator.creatorgui.GuiCreator-class.html#__init__,Method le2m.creator.filestocopy.creator_Gui.GuiDecision.__init__()=le2m.creator.filestocopy.creator_Gui.GuiDecision-class.html#__init__,Method le2m.creator.filestocopy.creator_Part.PartieEXPERIENCE_NOM_COURT.__init__()=le2m.creator.filestocopy.creator_Part.PartieEXPERIENCE_NOM_COURT-class.html#__init__,Method le2m.creator.filestocopy.creator_Part.RepetitionsEXPERIENCE_NOM_COURT.__init__()=le2m.creator.filestocopy.creator_Part.RepetitionsEXPERIENCE_NOM_COURT-class.html#__init__,Method le2m.creator.filestocopy.creator_Remote.RemoteEXPERIENCE_NOM_COURT.__init__()=le2m.creator.filestocopy.creator_Remote.RemoteEXPERIENCE_NOM_COURT-class.html#__init__,Method le2m.creator.filestocopy.creator_Serv.Serveur.__init__()=le2m.creator.filestocopy.creator_Serv.Serveur-class.html#__init__,Method le2m.extractor.extractorgui.GuiExtractor.__init__()=le2m.extractor.extractorgui.GuiExtractor-class.html#__init__,Method le2m.parts.Dictator.DictatorGui.GuiDecision.__init__()=le2m.parts.Dictator.DictatorGui.GuiDecision-class.html#__init__,Method le2m.parts.Dictator.DictatorPart.PartieDIC.__init__()=le2m.parts.Dictator.DictatorPart.PartieDIC-class.html#__init__,Method le2m.parts.Dictator.DictatorPart.RepetitionsDIC.__init__()=le2m.parts.Dictator.DictatorPart.RepetitionsDIC-class.html#__init__,Method le2m.parts.Dictator.DictatorRemote.RemoteDIC.__init__()=le2m.parts.Dictator.DictatorRemote.RemoteDIC-class.html#__init__,Method le2m.parts.Dictator.DictatorServ.Serveur.__init__()=le2m.parts.Dictator.DictatorServ.Serveur-class.html#__init__,Method le2m.parts.GneezyPotter.GneezyPotterGui.GuiConfigure.__init__()=le2m.parts.GneezyPotter.GneezyPotterGui.GuiConfigure-class.html#__init__,Method le2m.parts.GneezyPotter.GneezyPotterGui.GuiDecision.__init__()=le2m.parts.GneezyPotter.GneezyPotterGui.GuiDecision-class.html#__init__,Method le2m.parts.GneezyPotter.GneezyPotterPart.PartieGP.__init__()=le2m.parts.GneezyPotter.GneezyPotterPart.PartieGP-class.html#__init__,Method le2m.parts.GneezyPotter.GneezyPotterPart.RepetitionsGP.__init__()=le2m.parts.GneezyPotter.GneezyPotterPart.RepetitionsGP-class.html#__init__,Method le2m.parts.GneezyPotter.GneezyPotterRemote.RemoteGP.__init__()=le2m.parts.GneezyPotter.GneezyPotterRemote.RemoteGP-class.html#__init__,Method le2m.parts.GneezyPotter.GneezyPotterServ.Serveur.__init__()=le2m.parts.GneezyPotter.GneezyPotterServ.Serveur-class.html#__init__,Method le2m.parts.PublicGoodGame.PublicGoodGameGui.GuiDecision.__init__()=le2m.parts.PublicGoodGame.PublicGoodGameGui.GuiDecision-class.html#__init__,Method le2m.parts.PublicGoodGame.PublicGoodGamePart.PartiePGG.__init__()=le2m.parts.PublicGoodGame.PublicGoodGamePart.PartiePGG-class.html#__init__,Method le2m.parts.PublicGoodGame.PublicGoodGamePart.RepetitionsPGG.__init__()=le2m.parts.PublicGoodGame.PublicGoodGamePart.RepetitionsPGG-class.html#__init__,Method le2m.parts.PublicGoodGame.PublicGoodGameRemote.RemotePGG.__init__()=le2m.parts.PublicGoodGame.PublicGoodGameRemote.RemotePGG-class.html#__init__,Method le2m.parts.PublicGoodGame.PublicGoodGameServ.Serveur.__init__()=le2m.parts.PublicGoodGame.PublicGoodGameServ.Serveur-class.html#__init__,Method le2m.questcomp.questcompgui.GuiQuestComp.__init__()=le2m.questcomp.questcompgui.GuiQuestComp-class.html#__init__,Method le2m.questcomp.questcompgui.GuiQuestCompQuest.__init__()=le2m.questcomp.questcompgui.GuiQuestCompQuest-class.html#__init__,Method le2m.questcomp.questcompgui.GuiQuestEdit.__init__()=le2m.questcomp.questcompgui.GuiQuestEdit-class.html#__init__,Method le2m.questcomp.questcompmod.Question.__init__()=le2m.questcomp.questcompmod.Question-class.html#__init__,Method le2m.questcomp.questcompmod.Questionnaire.__init__()=le2m.questcomp.questcompmod.Questionnaire-class.html#__init__,Method le2m.server.serv.Serveur.__init__()=le2m.server.serv.Serveur-class.html#__init__,Method le2m.server.servgest.servgestbase.GestionnaireBase.__init__()=le2m.server.servgest.servgestbase.GestionnaireBase-class.html#__init__,Method le2m.server.servgest.servgestbase.Session.__init__()=le2m.server.servgest.servgestbase.Session-class.html#__init__,Method le2m.server.servgest.servgestexpe.GestionnaireExperience.__init__()=le2m.server.servgest.servgestexpe.GestionnaireExperience-class.html#__init__,Method le2m.server.servgest.servgestgroups.GestionnaireGroupes.__init__()=le2m.server.servgest.servgestgroups.GestionnaireGroupes-class.html#__init__,Method le2m.server.servgest.servgestgui.GestionnaireGraphique.__init__()=le2m.server.servgest.servgestgui.GestionnaireGraphique-class.html#__init__,Method le2m.server.servgest.servgestplayers.GestionnaireJoueurs.__init__()=le2m.server.servgest.servgestplayers.GestionnaireJoueurs-class.html#__init__,Method le2m.server.servgui.servguidialogs.GuiGenres.__init__()=le2m.server.servgui.servguidialogs.GuiGenres-class.html#__init__,Method le2m.server.servgui.servguidialogs.GuiInformation.__init__()=le2m.server.servgui.servguidialogs.GuiInformation-class.html#__init__,Method le2m.server.servgui.servguidialogs.GuiPartLoad.__init__()=le2m.server.servgui.servguidialogs.GuiPartLoad-class.html#__init__,Method le2m.server.servgui.servguidialogs.GuiPartsPlayed.__init__()=le2m.server.servgui.servguidialogs.GuiPartsPlayed-class.html#__init__,Method le2m.server.servgui.servguidialogs.GuiPayoffs.__init__()=le2m.server.servgui.servguidialogs.GuiPayoffs-class.html#__init__,Method le2m.server.servgui.servguitablemodels.TableModelGenres.__init__()=le2m.server.servgui.servguitablemodels.TableModelGenres-class.html#__init__,Method le2m.server.servgui.servguitablemodels.TableModelJoueurs.__init__()=le2m.server.servgui.servguitablemodels.TableModelJoueurs-class.html#__init__,Method le2m.server.servgui.servguitablemodels.TableModelPaiements.__init__()=le2m.server.servgui.servguitablemodels.TableModelPaiements-class.html#__init__,Method le2m.server.servgui.servguitablemodels.TableModelQuestionnaireFinal.__init__()=le2m.server.servgui.servguitablemodels.TableModelQuestionnaireFinal-class.html#__init__,Method le2m.server.servgui.servguiwindows.GuiServeur.__init__()=le2m.server.servgui.servguiwindows.GuiServeur-class.html#__init__,Method le2m.server.servparties.Partie.__init__()=le2m.server.servparties.Partie-class.html#__init__,Method le2m.server.servparties.PartieBase.__init__()=le2m.server.servparties.PartieBase-class.html#__init__,Method le2m.server.servparties.PartieQuestionnaireFinal.__init__()=le2m.server.servparties.PartieQuestionnaireFinal-class.html#__init__,Method le2m.server.servplayers.Joueur.__init__()=le2m.server.servplayers.Joueur-class.html#__init__,Method le2m.util.utilqtreactor.QTReactor.__init__()=le2m.util.utilqtreactor.QTReactor-class.html#__init__,Method le2m.util.utilqtreactor.TwistedSocketNotifier.__init__()=le2m.util.utilqtreactor.TwistedSocketNotifier-class.html#__init__,Method le2m.util.utilqtreactor.fakeApplication.__init__()=le2m.util.utilqtreactor.fakeApplication-class.html#__init__"><a title="le2m.client.clt.Client.__init__
le2m.client.cltgui.cltguidialogs.GuiAccueil.__init__
le2m.client.cltgui.cltguidialogs.GuiFinal.__init__
le2m.client.cltgui.cltguidialogs.GuiHistorique.__init__
le2m.client.cltgui.cltguidialogs.GuiPopup.__init__
le2m.client.cltgui.cltguidialogs.GuiQuestionnaireFinal.__init__
le2m.client.cltgui.cltguidialogs.GuiRecapitulatif.__init__
le2m.client.cltgui.cltguiforms.GuiAttente.__init__
le2m.client.cltgui.cltguitablemodels.TableModelHistorique.__init__
le2m.client.cltremote.RemoteBase.__init__
le2m.client.cltremote.RemoteQuestionnaireFinal.__init__
le2m.creator.creatorgui.GuiCreator.__init__
le2m.creator.filestocopy.creator_Gui.GuiDecision.__init__
le2m.creator.filestocopy.creator_Part.PartieEXPERIENCE_NOM_COURT.__init__
le2m.creator.filestocopy.creator_Part.RepetitionsEXPERIENCE_NOM_COURT.__init__
le2m.creator.filestocopy.creator_Remote.RemoteEXPERIENCE_NOM_COURT.__init__
le2m.creator.filestocopy.creator_Serv.Serveur.__init__
le2m.extractor.extractorgui.GuiExtractor.__init__
le2m.parts.Dictator.DictatorGui.GuiDecision.__init__
le2m.parts.Dictator.DictatorPart.PartieDIC.__init__
le2m.parts.Dictator.DictatorPart.RepetitionsDIC.__init__
le2m.parts.Dictator.DictatorRemote.RemoteDIC.__init__
le2m.parts.Dictator.DictatorServ.Serveur.__init__
le2m.parts.GneezyPotter.GneezyPotterGui.GuiConfigure.__init__
le2m.parts.GneezyPotter.GneezyPotterGui.GuiDecision.__init__
le2m.parts.GneezyPotter.GneezyPotterPart.PartieGP.__init__
le2m.parts.GneezyPotter.GneezyPotterPart.RepetitionsGP.__init__
le2m.parts.GneezyPotter.GneezyPotterRemote.RemoteGP.__init__
le2m.parts.GneezyPotter.GneezyPotterServ.Serveur.__init__
le2m.parts.PublicGoodGame.PublicGoodGameGui.GuiDecision.__init__
le2m.parts.PublicGoodGame.PublicGoodGamePart.PartiePGG.__init__
le2m.parts.PublicGoodGame.PublicGoodGamePart.RepetitionsPGG.__init__
le2m.parts.PublicGoodGame.PublicGoodGameRemote.RemotePGG.__init__
le2m.parts.PublicGoodGame.PublicGoodGameServ.Serveur.__init__
le2m.questcomp.questcompgui.GuiQuestComp.__init__
le2m.questcomp.questcompgui.GuiQuestCompQuest.__init__
le2m.questcomp.questcompgui.GuiQuestEdit.__init__
le2m.questcomp.questcompmod.Question.__init__
le2m.questcomp.questcompmod.Questionnaire.__init__
le2m.server.serv.Serveur.__init__
le2m.server.servgest.servgestbase.GestionnaireBase.__init__
le2m.server.servgest.servgestbase.Session.__init__
le2m.server.servgest.servgestexpe.GestionnaireExperience.__init__
le2m.server.servgest.servgestgroups.GestionnaireGroupes.__init__
le2m.server.servgest.servgestgui.GestionnaireGraphique.__init__
le2m.server.servgest.servgestplayers.GestionnaireJoueurs.__init__
le2m.server.servgui.servguidialogs.GuiGenres.__init__
le2m.server.servgui.servguidialogs.GuiInformation.__init__
le2m.server.servgui.servguidialogs.GuiPartLoad.__init__
le2m.server.servgui.servguidialogs.GuiPartsPlayed.__init__
le2m.server.servgui.servguidialogs.GuiPayoffs.__init__
le2m.server.servgui.servguitablemodels.TableModelGenres.__init__
le2m.server.servgui.servguitablemodels.TableModelJoueurs.__init__
le2m.server.servgui.servguitablemodels.TableModelPaiements.__init__
le2m.server.servgui.servguitablemodels.TableModelQuestionnaireFinal.__init__
le2m.server.servgui.servguiwindows.GuiServeur.__init__
le2m.server.servparties.Partie.__init__
le2m.server.servparties.PartieBase.__init__
le2m.server.servparties.PartieQuestionnaireFinal.__init__
le2m.server.servplayers.Joueur.__init__
le2m.util.utilqtreactor.QTReactor.__init__
le2m.util.utilqtreactor.TwistedSocketNotifier.__init__
le2m.util.utilqtreactor.fakeApplication.__init__" class="py-name" href="#" onclick="return doclink('link-15', '__init__', 'link-15');">__init__</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L108"></a><tt class="py-lineno">108</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_questions</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-op">]</tt> </tt>
<a name="L109"></a><tt class="py-lineno">109</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_file</tt> <tt class="py-op">=</tt> <tt class="py-name">None</tt> </tt>
</div><a name="L110"></a><tt class="py-lineno">110</tt>  <tt class="py-line"> </tt>
<a name="Questionnaire.add_question"></a><div id="Questionnaire.add_question-def"><a name="L111"></a><tt class="py-lineno">111</tt> <a class="py-toggle" href="#" id="Questionnaire.add_question-toggle" onclick="return toggle('Questionnaire.add_question');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html#add_question">add_question</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">quest</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire.add_question-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Questionnaire.add_question-expanded"><a name="L112"></a><tt class="py-lineno">112</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_questions</tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt class="py-name">quest</tt><tt class="py-op">)</tt> </tt>
<a name="L113"></a><tt class="py-lineno">113</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-16" class="py-name" targets="Method le2m.questcomp.questcompmod.Questionnaire.refresh()=le2m.questcomp.questcompmod.Questionnaire-class.html#refresh"><a title="le2m.questcomp.questcompmod.Questionnaire.refresh" class="py-name" href="#" onclick="return doclink('link-16', 'refresh', 'link-16');">refresh</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
</div><a name="L114"></a><tt class="py-lineno">114</tt>  <tt class="py-line"> </tt>
<a name="Questionnaire.set_questions"></a><div id="Questionnaire.set_questions-def"><a name="L115"></a><tt class="py-lineno">115</tt> <a class="py-toggle" href="#" id="Questionnaire.set_questions-toggle" onclick="return toggle('Questionnaire.set_questions');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html#set_questions">set_questions</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">questions</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire.set_questions-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Questionnaire.set_questions-expanded"><a name="L116"></a><tt class="py-lineno">116</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-name">questions</tt><tt class="py-op">:</tt> </tt>
<a name="L117"></a><tt class="py-lineno">117</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> </tt>
<a name="L118"></a><tt class="py-lineno">118</tt>  <tt class="py-line"> </tt>
<a name="L119"></a><tt class="py-lineno">119</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-name">q</tt> <tt class="py-keyword">in</tt> <tt class="py-name">questions</tt><tt class="py-op">:</tt> </tt>
<a name="L120"></a><tt class="py-lineno">120</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-17" class="py-name" targets="Method le2m.questcomp.questcompmod.Questionnaire.add_question()=le2m.questcomp.questcompmod.Questionnaire-class.html#add_question"><a title="le2m.questcomp.questcompmod.Questionnaire.add_question" class="py-name" href="#" onclick="return doclink('link-17', 'add_question', 'link-17');">add_question</a></tt><tt class="py-op">(</tt><tt class="py-name">q</tt><tt class="py-op">)</tt> </tt>
</div><a name="L121"></a><tt class="py-lineno">121</tt>  <tt class="py-line"> </tt>
<a name="Questionnaire.clear"></a><div id="Questionnaire.clear-def"><a name="L122"></a><tt class="py-lineno">122</tt> <a class="py-toggle" href="#" id="Questionnaire.clear-toggle" onclick="return toggle('Questionnaire.clear');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html#clear">clear</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire.clear-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Questionnaire.clear-expanded"><a name="L123"></a><tt class="py-lineno">123</tt>  <tt class="py-line">        <tt class="py-keyword">del</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_questions</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
</div><a name="L124"></a><tt class="py-lineno">124</tt>  <tt class="py-line"> </tt>
<a name="Questionnaire.get_question"></a><div id="Questionnaire.get_question-def"><a name="L125"></a><tt class="py-lineno">125</tt> <a class="py-toggle" href="#" id="Questionnaire.get_question-toggle" onclick="return toggle('Questionnaire.get_question');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html#get_question">get_question</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">num</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire.get_question-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Questionnaire.get_question-expanded"><a name="L126"></a><tt class="py-lineno">126</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-name">q</tt> <tt class="py-keyword">in</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-18" class="py-name" targets="Function le2m.questcomp.questcomp.get_questions()=le2m.questcomp.questcomp-module.html#get_questions,Method le2m.questcomp.questcompmod.Questionnaire.get_questions()=le2m.questcomp.questcompmod.Questionnaire-class.html#get_questions,Function le2m.questcomp.questcompmod.get_questions()=le2m.questcomp.questcompmod-module.html#get_questions"><a title="le2m.questcomp.questcomp.get_questions
le2m.questcomp.questcompmod.Questionnaire.get_questions
le2m.questcomp.questcompmod.get_questions" class="py-name" href="#" onclick="return doclink('link-18', 'get_questions', 'link-18');">get_questions</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L127"></a><tt class="py-lineno">127</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">q</tt><tt class="py-op">.</tt><tt id="link-19" class="py-name"><a title="le2m.questcomp.questcompmod.Question.number" class="py-name" href="#" onclick="return doclink('link-19', 'number', 'link-2');">number</a></tt> <tt class="py-op">==</tt> <tt class="py-name">num</tt><tt class="py-op">:</tt> </tt>
<a name="L128"></a><tt class="py-lineno">128</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt class="py-name">q</tt> </tt>
<a name="L129"></a><tt class="py-lineno">129</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">None</tt> </tt>
</div><a name="L130"></a><tt class="py-lineno">130</tt>  <tt class="py-line"> </tt>
<a name="Questionnaire.get_questions"></a><div id="Questionnaire.get_questions-def"><a name="L131"></a><tt class="py-lineno">131</tt> <a class="py-toggle" href="#" id="Questionnaire.get_questions-toggle" onclick="return toggle('Questionnaire.get_questions');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html#get_questions">get_questions</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire.get_questions-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Questionnaire.get_questions-expanded"><a name="L132"></a><tt class="py-lineno">132</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_questions</tt> </tt>
</div><a name="L133"></a><tt class="py-lineno">133</tt>  <tt class="py-line"> </tt>
<a name="Questionnaire.isempty"></a><div id="Questionnaire.isempty-def"><a name="L134"></a><tt class="py-lineno">134</tt> <a class="py-toggle" href="#" id="Questionnaire.isempty-toggle" onclick="return toggle('Questionnaire.isempty');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html#isempty">isempty</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire.isempty-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Questionnaire.isempty-expanded"><a name="L135"></a><tt class="py-lineno">135</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_questions</tt><tt class="py-op">)</tt> <tt class="py-op">==</tt> <tt class="py-number">0</tt> </tt>
</div><a name="L136"></a><tt class="py-lineno">136</tt>  <tt class="py-line"> </tt>
<a name="Questionnaire.refresh"></a><div id="Questionnaire.refresh-def"><a name="L137"></a><tt class="py-lineno">137</tt> <a class="py-toggle" href="#" id="Questionnaire.refresh-toggle" onclick="return toggle('Questionnaire.refresh');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html#refresh">refresh</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire.refresh-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Questionnaire.refresh-expanded"><a name="L138"></a><tt class="py-lineno">138</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_questions</tt><tt class="py-op">.</tt><tt class="py-name">sort</tt><tt class="py-op">(</tt><tt class="py-name">key</tt><tt class="py-op">=</tt><tt class="py-keyword">lambda</tt> <tt class="py-name">q</tt><tt class="py-op">:</tt> <tt class="py-name">q</tt><tt class="py-op">.</tt><tt id="link-20" class="py-name"><a title="le2m.questcomp.questcompmod.Question.number" class="py-name" href="#" onclick="return doclink('link-20', 'number', 'link-2');">number</a></tt><tt class="py-op">)</tt> </tt>
<a name="L139"></a><tt class="py-lineno">139</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-name">q</tt> <tt class="py-keyword">in</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_questions</tt><tt class="py-op">:</tt> </tt>
<a name="L140"></a><tt class="py-lineno">140</tt>  <tt class="py-line">            <tt class="py-name">q</tt><tt class="py-op">.</tt><tt id="link-21" class="py-name"><a title="le2m.questcomp.questcompmod.Question.number" class="py-name" href="#" onclick="return doclink('link-21', 'number', 'link-2');">number</a></tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_questions</tt><tt class="py-op">.</tt><tt class="py-name">index</tt><tt class="py-op">(</tt><tt class="py-name">q</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt> </tt>
<a name="L141"></a><tt class="py-lineno">141</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-22" class="py-name"><a title="le2m.questcomp.questcompmod.Questionnaire.valuechanged" class="py-name" href="#" onclick="return doclink('link-22', 'valuechanged', 'link-13');">valuechanged</a></tt><tt class="py-op">.</tt><tt class="py-name">emit</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
</div><a name="L142"></a><tt class="py-lineno">142</tt>  <tt class="py-line"> </tt>
<a name="Questionnaire.hasnumber"></a><div id="Questionnaire.hasnumber-def"><a name="L143"></a><tt class="py-lineno">143</tt> <a class="py-toggle" href="#" id="Questionnaire.hasnumber-toggle" onclick="return toggle('Questionnaire.hasnumber');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html#hasnumber">hasnumber</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">num</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire.hasnumber-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Questionnaire.hasnumber-expanded"><a name="L144"></a><tt class="py-lineno">144</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-23" class="py-name" targets="Method le2m.questcomp.questcompmod.Questionnaire.isempty()=le2m.questcomp.questcompmod.Questionnaire-class.html#isempty"><a title="le2m.questcomp.questcompmod.Questionnaire.isempty" class="py-name" href="#" onclick="return doclink('link-23', 'isempty', 'link-23');">isempty</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L145"></a><tt class="py-lineno">145</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt class="py-name">False</tt> </tt>
<a name="L146"></a><tt class="py-lineno">146</tt>  <tt class="py-line"> </tt>
<a name="L147"></a><tt class="py-lineno">147</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-name">q</tt> <tt class="py-keyword">in</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-24" class="py-name"><a title="le2m.questcomp.questcomp.get_questions
le2m.questcomp.questcompmod.Questionnaire.get_questions
le2m.questcomp.questcompmod.get_questions" class="py-name" href="#" onclick="return doclink('link-24', 'get_questions', 'link-18');">get_questions</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L148"></a><tt class="py-lineno">148</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">q</tt><tt class="py-op">.</tt><tt id="link-25" class="py-name"><a title="le2m.questcomp.questcompmod.Question.number" class="py-name" href="#" onclick="return doclink('link-25', 'number', 'link-2');">number</a></tt> <tt class="py-op">==</tt> <tt class="py-name">num</tt><tt class="py-op">:</tt> </tt>
<a name="L149"></a><tt class="py-lineno">149</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt class="py-name">True</tt> </tt>
<a name="L150"></a><tt class="py-lineno">150</tt>  <tt class="py-line"> </tt>
<a name="L151"></a><tt class="py-lineno">151</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">False</tt> </tt>
</div><a name="L152"></a><tt class="py-lineno">152</tt>  <tt class="py-line"> </tt>
<a name="Questionnaire.delete"></a><div id="Questionnaire.delete-def"><a name="L153"></a><tt class="py-lineno">153</tt> <a class="py-toggle" href="#" id="Questionnaire.delete-toggle" onclick="return toggle('Questionnaire.delete');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html#delete">delete</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">quest</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire.delete-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Questionnaire.delete-expanded"><a name="L154"></a><tt class="py-lineno">154</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_questions</tt><tt class="py-op">.</tt><tt class="py-name">remove</tt><tt class="py-op">(</tt><tt class="py-name">quest</tt><tt class="py-op">)</tt> </tt>
<a name="L155"></a><tt class="py-lineno">155</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-26" class="py-name"><a title="le2m.questcomp.questcompmod.Questionnaire.refresh" class="py-name" href="#" onclick="return doclink('link-26', 'refresh', 'link-16');">refresh</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
</div><a name="L156"></a><tt class="py-lineno">156</tt>  <tt class="py-line"> </tt>
<a name="Questionnaire.size"></a><div id="Questionnaire.size-def"><a name="L157"></a><tt class="py-lineno">157</tt> <a class="py-toggle" href="#" id="Questionnaire.size-toggle" onclick="return toggle('Questionnaire.size');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html#size">size</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire.size-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Questionnaire.size-expanded"><a name="L158"></a><tt class="py-lineno">158</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_questions</tt><tt class="py-op">)</tt> </tt>
</div><a name="L159"></a><tt class="py-lineno">159</tt>  <tt class="py-line"> </tt>
<a name="L160"></a><tt class="py-lineno">160</tt>  <tt class="py-line">    <tt class="py-decorator">@</tt><tt class="py-decorator">property</tt> </tt>
<a name="Questionnaire.file"></a><div id="Questionnaire.file-def"><a name="L161"></a><tt class="py-lineno">161</tt> <a class="py-toggle" href="#" id="Questionnaire.file-toggle" onclick="return toggle('Questionnaire.file');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html#file">file</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire.file-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Questionnaire.file-expanded"><a name="L162"></a><tt class="py-lineno">162</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_file</tt> </tt>
</div><a name="L163"></a><tt class="py-lineno">163</tt>  <tt class="py-line"> </tt>
<a name="L164"></a><tt class="py-lineno">164</tt>  <tt class="py-line">    <tt class="py-decorator">@</tt><tt class="py-decorator">file</tt><tt class="py-op">.</tt><tt class="py-name">setter</tt> </tt>
<a name="Questionnaire.file"></a><div id="Questionnaire.file-def"><a name="L165"></a><tt class="py-lineno">165</tt> <a class="py-toggle" href="#" id="Questionnaire.file-toggle" onclick="return toggle('Questionnaire.file');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html#file">file</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">xmlfile</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire.file-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Questionnaire.file-expanded"><a name="L166"></a><tt class="py-lineno">166</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">_file</tt> <tt class="py-op">=</tt> <tt class="py-name">xmlfile</tt> </tt>
</div><a name="L167"></a><tt class="py-lineno">167</tt>  <tt class="py-line"> </tt>
<a name="Questionnaire.tohtml"></a><div id="Questionnaire.tohtml-def"><a name="L168"></a><tt class="py-lineno">168</tt> <a class="py-toggle" href="#" id="Questionnaire.tohtml-toggle" onclick="return toggle('Questionnaire.tohtml');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html#tohtml">tohtml</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire.tohtml-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Questionnaire.tohtml-expanded"><a name="L169"></a><tt class="py-lineno">169</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L170"></a><tt class="py-lineno">170</tt>  <tt class="py-line"><tt class="py-docstring">        return an html text with the questions</tt> </tt>
<a name="L171"></a><tt class="py-lineno">171</tt>  <tt class="py-line"><tt class="py-docstring">        :return:str</tt> </tt>
<a name="L172"></a><tt class="py-lineno">172</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L173"></a><tt class="py-lineno">173</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-27" class="py-name"><a title="le2m.questcomp.questcompmod.Questionnaire.isempty" class="py-name" href="#" onclick="return doclink('link-27', 'isempty', 'link-23');">isempty</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L174"></a><tt class="py-lineno">174</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> </tt>
<a name="L175"></a><tt class="py-lineno">175</tt>  <tt class="py-line"> </tt>
<a name="L176"></a><tt class="py-lineno">176</tt>  <tt class="py-line">        <tt class="py-name">html</tt> <tt class="py-op">=</tt> <tt class="py-string">u""</tt> </tt>
<a name="L177"></a><tt class="py-lineno">177</tt>  <tt class="py-line">        <tt class="py-name">html</tt> <tt class="py-op">+=</tt> <tt class="py-string">u"&lt;html&gt;&lt;title&gt;"</tt> </tt>
<a name="L178"></a><tt class="py-lineno">178</tt>  <tt class="py-line">        <tt class="py-name">html</tt> <tt class="py-op">+=</tt> <tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"Understanding questionnaire"</tt><tt class="py-op">)</tt> </tt>
<a name="L179"></a><tt class="py-lineno">179</tt>  <tt class="py-line">        <tt class="py-name">html</tt> <tt class="py-op">+=</tt> <tt class="py-string">u"&lt;/title&gt;&lt;body&gt;&lt;h2&gt;"</tt> </tt>
<a name="L180"></a><tt class="py-lineno">180</tt>  <tt class="py-line">        <tt class="py-name">html</tt> <tt class="py-op">+=</tt> <tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"Understanding questionnaire"</tt><tt class="py-op">)</tt> </tt>
<a name="L181"></a><tt class="py-lineno">181</tt>  <tt class="py-line">        <tt class="py-name">html</tt> <tt class="py-op">+=</tt> <tt class="py-string">u"&lt;/h2&gt;"</tt> </tt>
<a name="L182"></a><tt class="py-lineno">182</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-name">q</tt> <tt class="py-keyword">in</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-28" class="py-name"><a title="le2m.questcomp.questcomp.get_questions
le2m.questcomp.questcompmod.Questionnaire.get_questions
le2m.questcomp.questcompmod.get_questions" class="py-name" href="#" onclick="return doclink('link-28', 'get_questions', 'link-18');">get_questions</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L183"></a><tt class="py-lineno">183</tt>  <tt class="py-line">            <tt class="py-name">html</tt> <tt class="py-op">+=</tt> <tt class="py-name">q</tt><tt class="py-op">.</tt><tt id="link-29" class="py-name" targets="Method le2m.questcomp.questcompmod.Question.tohtml()=le2m.questcomp.questcompmod.Question-class.html#tohtml,Method le2m.questcomp.questcompmod.Questionnaire.tohtml()=le2m.questcomp.questcompmod.Questionnaire-class.html#tohtml"><a title="le2m.questcomp.questcompmod.Question.tohtml
le2m.questcomp.questcompmod.Questionnaire.tohtml" class="py-name" href="#" onclick="return doclink('link-29', 'tohtml', 'link-29');">tohtml</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L184"></a><tt class="py-lineno">184</tt>  <tt class="py-line">        <tt class="py-name">html</tt> <tt class="py-op">+=</tt> <tt class="py-string">u"&lt;/body&gt;&lt;/html&gt;"</tt> </tt>
<a name="L185"></a><tt class="py-lineno">185</tt>  <tt class="py-line"> </tt>
<a name="L186"></a><tt class="py-lineno">186</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">html</tt> </tt>
</div><a name="L187"></a><tt class="py-lineno">187</tt>  <tt class="py-line"> </tt>
<a name="Questionnaire.toxml"></a><div id="Questionnaire.toxml-def"><a name="L188"></a><tt class="py-lineno">188</tt> <a class="py-toggle" href="#" id="Questionnaire.toxml-toggle" onclick="return toggle('Questionnaire.toxml');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod.Questionnaire-class.html#toxml">toxml</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Questionnaire.toxml-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="Questionnaire.toxml-expanded"><a name="L189"></a><tt class="py-lineno">189</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L190"></a><tt class="py-lineno">190</tt>  <tt class="py-line"><tt class="py-docstring">        Return an xml string with the questions inside</tt> </tt>
<a name="L191"></a><tt class="py-lineno">191</tt>  <tt class="py-line"><tt class="py-docstring">        :return: str</tt> </tt>
<a name="L192"></a><tt class="py-lineno">192</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L193"></a><tt class="py-lineno">193</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-30" class="py-name"><a title="le2m.questcomp.questcompmod.Questionnaire.isempty" class="py-name" href="#" onclick="return doclink('link-30', 'isempty', 'link-23');">isempty</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L194"></a><tt class="py-lineno">194</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> </tt>
<a name="L195"></a><tt class="py-lineno">195</tt>  <tt class="py-line"> </tt>
<a name="L196"></a><tt class="py-lineno">196</tt>  <tt class="py-line">        <tt class="py-name">questr</tt> <tt class="py-op">=</tt> <tt class="py-name">ElementTree</tt><tt class="py-op">.</tt><tt class="py-name">Element</tt><tt class="py-op">(</tt><tt class="py-string">u"questionnaire"</tt><tt class="py-op">)</tt> </tt>
<a name="L197"></a><tt class="py-lineno">197</tt>  <tt class="py-line"> </tt>
<a name="L198"></a><tt class="py-lineno">198</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-name">q</tt> <tt class="py-keyword">in</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-31" class="py-name"><a title="le2m.questcomp.questcomp.get_questions
le2m.questcomp.questcompmod.Questionnaire.get_questions
le2m.questcomp.questcompmod.get_questions" class="py-name" href="#" onclick="return doclink('link-31', 'get_questions', 'link-18');">get_questions</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L199"></a><tt class="py-lineno">199</tt>  <tt class="py-line">            <tt class="py-name">quest</tt> <tt class="py-op">=</tt> <tt class="py-name">ElementTree</tt><tt class="py-op">.</tt><tt class="py-name">SubElement</tt><tt class="py-op">(</tt><tt class="py-name">questr</tt><tt class="py-op">,</tt> <tt class="py-string">u"question"</tt><tt class="py-op">)</tt> </tt>
<a name="L200"></a><tt class="py-lineno">200</tt>  <tt class="py-line">            <tt class="py-name">ennonce</tt> <tt class="py-op">=</tt> <tt class="py-name">ElementTree</tt><tt class="py-op">.</tt><tt class="py-name">SubElement</tt><tt class="py-op">(</tt><tt class="py-name">quest</tt><tt class="py-op">,</tt> <tt class="py-string">u"ennonce"</tt><tt class="py-op">)</tt> </tt>
<a name="L201"></a><tt class="py-lineno">201</tt>  <tt class="py-line">            <tt class="py-name">ennonce</tt><tt class="py-op">.</tt><tt id="link-32" class="py-name"><a title="le2m.questcomp.questcompmod.Question.text" class="py-name" href="#" onclick="return doclink('link-32', 'text', 'link-3');">text</a></tt> <tt class="py-op">=</tt> <tt class="py-string">u"{}"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">q</tt><tt class="py-op">.</tt><tt id="link-33" class="py-name"><a title="le2m.questcomp.questcompmod.Question.text" class="py-name" href="#" onclick="return doclink('link-33', 'text', 'link-3');">text</a></tt><tt class="py-op">)</tt> </tt>
<a name="L202"></a><tt class="py-lineno">202</tt>  <tt class="py-line">            <tt class="py-keyword">for</tt> <tt class="py-name">p</tt> <tt class="py-keyword">in</tt> <tt class="py-name">q</tt><tt class="py-op">.</tt><tt id="link-34" class="py-name"><a title="le2m.questcomp.questcompmod.Question.proposals" class="py-name" href="#" onclick="return doclink('link-34', 'proposals', 'link-4');">proposals</a></tt><tt class="py-op">:</tt> </tt>
<a name="L203"></a><tt class="py-lineno">203</tt>  <tt class="py-line">                <tt class="py-name">proposition</tt> <tt class="py-op">=</tt> <tt class="py-name">ElementTree</tt><tt class="py-op">.</tt><tt class="py-name">SubElement</tt><tt class="py-op">(</tt><tt class="py-name">quest</tt><tt class="py-op">,</tt> <tt class="py-string">u"proposition"</tt><tt class="py-op">)</tt> </tt>
<a name="L204"></a><tt class="py-lineno">204</tt>  <tt class="py-line">                <tt class="py-name">proposition</tt><tt class="py-op">.</tt><tt id="link-35" class="py-name"><a title="le2m.questcomp.questcompmod.Question.text" class="py-name" href="#" onclick="return doclink('link-35', 'text', 'link-3');">text</a></tt> <tt class="py-op">=</tt> <tt class="py-string">u"{}"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">p</tt><tt class="py-op">)</tt> </tt>
<a name="L205"></a><tt class="py-lineno">205</tt>  <tt class="py-line">            <tt class="py-keyword">for</tt> <tt class="py-name">b</tt> <tt class="py-keyword">in</tt> <tt class="py-name">q</tt><tt class="py-op">.</tt><tt id="link-36" class="py-name"><a title="le2m.questcomp.questcompmod.Question.goodanswers" class="py-name" href="#" onclick="return doclink('link-36', 'goodanswers', 'link-5');">goodanswers</a></tt><tt class="py-op">:</tt> </tt>
<a name="L206"></a><tt class="py-lineno">206</tt>  <tt class="py-line">                <tt class="py-name">bonrep</tt> <tt class="py-op">=</tt> <tt class="py-name">ElementTree</tt><tt class="py-op">.</tt><tt class="py-name">SubElement</tt><tt class="py-op">(</tt><tt class="py-name">quest</tt><tt class="py-op">,</tt> <tt class="py-string">u'bonneReponse'</tt><tt class="py-op">)</tt> </tt>
<a name="L207"></a><tt class="py-lineno">207</tt>  <tt class="py-line">                <tt class="py-name">bonrep</tt><tt class="py-op">.</tt><tt id="link-37" class="py-name"><a title="le2m.questcomp.questcompmod.Question.text" class="py-name" href="#" onclick="return doclink('link-37', 'text', 'link-3');">text</a></tt> <tt class="py-op">=</tt> <tt class="py-string">u"{}"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">b</tt><tt class="py-op">)</tt> </tt>
<a name="L208"></a><tt class="py-lineno">208</tt>  <tt class="py-line">            <tt class="py-name">explication</tt> <tt class="py-op">=</tt> <tt class="py-name">ElementTree</tt><tt class="py-op">.</tt><tt class="py-name">SubElement</tt><tt class="py-op">(</tt><tt class="py-name">quest</tt><tt class="py-op">,</tt> <tt class="py-string">u"explication"</tt><tt class="py-op">)</tt> </tt>
<a name="L209"></a><tt class="py-lineno">209</tt>  <tt class="py-line">            <tt class="py-name">explication</tt><tt class="py-op">.</tt><tt id="link-38" class="py-name"><a title="le2m.questcomp.questcompmod.Question.text" class="py-name" href="#" onclick="return doclink('link-38', 'text', 'link-3');">text</a></tt> <tt class="py-op">=</tt> <tt class="py-string">u"{}"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">q</tt><tt class="py-op">.</tt><tt id="link-39" class="py-name"><a title="le2m.questcomp.questcompmod.Question.explanation" class="py-name" href="#" onclick="return doclink('link-39', 'explanation', 'link-6');">explanation</a></tt><tt class="py-op">)</tt> </tt>
<a name="L210"></a><tt class="py-lineno">210</tt>  <tt class="py-line"> </tt>
<a name="L211"></a><tt class="py-lineno">211</tt>  <tt class="py-line">        <tt id="link-40" class="py-name"><a title="le2m.client.clt.logger
le2m.client.cltgui.cltguidialogs.logger
le2m.client.cltremote.logger
le2m.creator.creator.logger
le2m.creator.filestocopy.creator_Gui.logger
le2m.creator.filestocopy.creator_Part.logger
le2m.creator.filestocopy.creator_Remote.logger
le2m.creator.filestocopy.creator_Serv.logger
le2m.extractor.extractorgui.logger
le2m.parts.Dictator.DictatorGui.logger
le2m.parts.Dictator.DictatorPart.logger
le2m.parts.Dictator.DictatorRemote.logger
le2m.parts.Dictator.DictatorServ.logger
le2m.parts.GneezyPotter.GneezyPotterGui.logger
le2m.parts.GneezyPotter.GneezyPotterPart.logger
le2m.parts.GneezyPotter.GneezyPotterRemote.logger
le2m.parts.GneezyPotter.GneezyPotterServ.logger
le2m.parts.PublicGoodGame.PublicGoodGameGui.logger
le2m.parts.PublicGoodGame.PublicGoodGamePart.logger
le2m.parts.PublicGoodGame.PublicGoodGameRemote.logger
le2m.parts.PublicGoodGame.PublicGoodGameServ.logger
le2m.questcomp.questcompgui.logger
le2m.questcomp.questcompmod.logger
le2m.questcomp.questcomputil.logger
le2m.server.serv.logger
le2m.server.servgest.servgestbase.logger
le2m.server.servgest.servgestexpe.logger
le2m.server.servgest.servgestgroups.logger
le2m.server.servgest.servgestgui.logger
le2m.server.servgest.servgestplayers.logger
le2m.server.servgui.servguidialogs.logger
le2m.server.servgui.servguiwindows.logger
le2m.server.servparties.logger
le2m.server.servplayers.logger
le2m.util.utiltools.logger" class="py-name" href="#" onclick="return doclink('link-40', 'logger', 'link-1');">logger</a></tt><tt class="py-op">.</tt><tt class="py-name">debug</tt><tt class="py-op">(</tt><tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"Generated xml: {xmlgen}"</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt> </tt>
<a name="L212"></a><tt class="py-lineno">212</tt>  <tt class="py-line">            <tt class="py-name">xmlgen</tt><tt class="py-op">=</tt><tt class="py-name">ElementTree</tt><tt class="py-op">.</tt><tt class="py-name">dump</tt><tt class="py-op">(</tt><tt class="py-name">questr</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L213"></a><tt class="py-lineno">213</tt>  <tt class="py-line"> </tt>
<a name="L214"></a><tt class="py-lineno">214</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">questr</tt> </tt>
</div></div><a name="L215"></a><tt class="py-lineno">215</tt>  <tt class="py-line"> </tt>
<a name="get_questions"></a><div id="get_questions-def"><a name="L216"></a><tt class="py-lineno">216</tt>  <tt class="py-line"> </tt>
<a name="L217"></a><tt class="py-lineno">217</tt> <a class="py-toggle" href="#" id="get_questions-toggle" onclick="return toggle('get_questions');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.questcomp.questcompmod-module.html#get_questions">get_questions</a><tt class="py-op">(</tt><tt class="py-param">xmlfile</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="get_questions-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="get_questions-expanded"><a name="L218"></a><tt class="py-lineno">218</tt>  <tt class="py-line">    <tt class="py-docstring">"""</tt> </tt>
<a name="L219"></a><tt class="py-lineno">219</tt>  <tt class="py-line"><tt class="py-docstring">    Return the questions</tt> </tt>
<a name="L220"></a><tt class="py-lineno">220</tt>  <tt class="py-line"><tt class="py-docstring">    :param xmlfile:</tt> </tt>
<a name="L221"></a><tt class="py-lineno">221</tt>  <tt class="py-line"><tt class="py-docstring">    :return: list</tt> </tt>
<a name="L222"></a><tt class="py-lineno">222</tt>  <tt class="py-line"><tt class="py-docstring">    """</tt> </tt>
<a name="L223"></a><tt class="py-lineno">223</tt>  <tt class="py-line">    <tt class="py-name">questions</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-op">]</tt> </tt>
<a name="L224"></a><tt class="py-lineno">224</tt>  <tt class="py-line">    <tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L225"></a><tt class="py-lineno">225</tt>  <tt class="py-line">        <tt class="py-name">questionnaire</tt> <tt class="py-op">=</tt> <tt class="py-name">ElementTree</tt><tt class="py-op">.</tt><tt class="py-name">parse</tt><tt class="py-op">(</tt><tt class="py-name">xmlfile</tt><tt class="py-op">)</tt> </tt>
<a name="L226"></a><tt class="py-lineno">226</tt>  <tt class="py-line">        <tt id="link-41" class="py-name"><a title="le2m.client.clt.logger
le2m.client.cltgui.cltguidialogs.logger
le2m.client.cltremote.logger
le2m.creator.creator.logger
le2m.creator.filestocopy.creator_Gui.logger
le2m.creator.filestocopy.creator_Part.logger
le2m.creator.filestocopy.creator_Remote.logger
le2m.creator.filestocopy.creator_Serv.logger
le2m.extractor.extractorgui.logger
le2m.parts.Dictator.DictatorGui.logger
le2m.parts.Dictator.DictatorPart.logger
le2m.parts.Dictator.DictatorRemote.logger
le2m.parts.Dictator.DictatorServ.logger
le2m.parts.GneezyPotter.GneezyPotterGui.logger
le2m.parts.GneezyPotter.GneezyPotterPart.logger
le2m.parts.GneezyPotter.GneezyPotterRemote.logger
le2m.parts.GneezyPotter.GneezyPotterServ.logger
le2m.parts.PublicGoodGame.PublicGoodGameGui.logger
le2m.parts.PublicGoodGame.PublicGoodGamePart.logger
le2m.parts.PublicGoodGame.PublicGoodGameRemote.logger
le2m.parts.PublicGoodGame.PublicGoodGameServ.logger
le2m.questcomp.questcompgui.logger
le2m.questcomp.questcompmod.logger
le2m.questcomp.questcomputil.logger
le2m.server.serv.logger
le2m.server.servgest.servgestbase.logger
le2m.server.servgest.servgestexpe.logger
le2m.server.servgest.servgestgroups.logger
le2m.server.servgest.servgestgui.logger
le2m.server.servgest.servgestplayers.logger
le2m.server.servgui.servguidialogs.logger
le2m.server.servgui.servguiwindows.logger
le2m.server.servparties.logger
le2m.server.servplayers.logger
le2m.util.utiltools.logger" class="py-name" href="#" onclick="return doclink('link-41', 'logger', 'link-1');">logger</a></tt><tt class="py-op">.</tt><tt class="py-name">debug</tt><tt class="py-op">(</tt><tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"Questionnaire: {q}"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">q</tt><tt class="py-op">=</tt><tt class="py-name">questionnaire</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L227"></a><tt class="py-lineno">227</tt>  <tt class="py-line">        <tt id="link-42" class="py-name"><a title="le2m.client.clt.logger
le2m.client.cltgui.cltguidialogs.logger
le2m.client.cltremote.logger
le2m.creator.creator.logger
le2m.creator.filestocopy.creator_Gui.logger
le2m.creator.filestocopy.creator_Part.logger
le2m.creator.filestocopy.creator_Remote.logger
le2m.creator.filestocopy.creator_Serv.logger
le2m.extractor.extractorgui.logger
le2m.parts.Dictator.DictatorGui.logger
le2m.parts.Dictator.DictatorPart.logger
le2m.parts.Dictator.DictatorRemote.logger
le2m.parts.Dictator.DictatorServ.logger
le2m.parts.GneezyPotter.GneezyPotterGui.logger
le2m.parts.GneezyPotter.GneezyPotterPart.logger
le2m.parts.GneezyPotter.GneezyPotterRemote.logger
le2m.parts.GneezyPotter.GneezyPotterServ.logger
le2m.parts.PublicGoodGame.PublicGoodGameGui.logger
le2m.parts.PublicGoodGame.PublicGoodGamePart.logger
le2m.parts.PublicGoodGame.PublicGoodGameRemote.logger
le2m.parts.PublicGoodGame.PublicGoodGameServ.logger
le2m.questcomp.questcompgui.logger
le2m.questcomp.questcompmod.logger
le2m.questcomp.questcomputil.logger
le2m.server.serv.logger
le2m.server.servgest.servgestbase.logger
le2m.server.servgest.servgestexpe.logger
le2m.server.servgest.servgestgroups.logger
le2m.server.servgest.servgestgui.logger
le2m.server.servgest.servgestplayers.logger
le2m.server.servgui.servguidialogs.logger
le2m.server.servgui.servguiwindows.logger
le2m.server.servparties.logger
le2m.server.servplayers.logger
le2m.util.utiltools.logger" class="py-name" href="#" onclick="return doclink('link-42', 'logger', 'link-1');">logger</a></tt><tt class="py-op">.</tt><tt id="link-43" class="py-name" targets="Method le2m.server.servplayers.Joueur.info()=le2m.server.servplayers.Joueur-class.html#info"><a title="le2m.server.servplayers.Joueur.info" class="py-name" href="#" onclick="return doclink('link-43', 'info', 'link-43');">info</a></tt><tt class="py-op">(</tt><tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"The questionnaire has {nb} questions"</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt> </tt>
<a name="L228"></a><tt class="py-lineno">228</tt>  <tt class="py-line">            <tt class="py-name">nb</tt><tt class="py-op">=</tt><tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">questionnaire</tt><tt class="py-op">.</tt><tt class="py-name">findall</tt><tt class="py-op">(</tt><tt class="py-string">"question"</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L229"></a><tt class="py-lineno">229</tt>  <tt class="py-line">        <tt class="py-name">compteur</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L230"></a><tt class="py-lineno">230</tt>  <tt class="py-line"> </tt>
<a name="L231"></a><tt class="py-lineno">231</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-name">q</tt> <tt class="py-keyword">in</tt> <tt class="py-name">questionnaire</tt><tt class="py-op">.</tt><tt class="py-name">iter</tt><tt class="py-op">(</tt><tt class="py-string">"question"</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L232"></a><tt class="py-lineno">232</tt>  <tt class="py-line">            <tt id="link-44" class="py-name" targets="Method le2m.server.servgest.servgestgui.GestionnaireGraphique.question()=le2m.server.servgest.servgestgui.GestionnaireGraphique-class.html#question"><a title="le2m.server.servgest.servgestgui.GestionnaireGraphique.question" class="py-name" href="#" onclick="return doclink('link-44', 'question', 'link-44');">question</a></tt> <tt class="py-op">=</tt> <tt id="link-45" class="py-name" targets="Class le2m.questcomp.questcompmod.CopyQuestion=le2m.questcomp.questcompmod.CopyQuestion-class.html"><a title="le2m.questcomp.questcompmod.CopyQuestion" class="py-name" href="#" onclick="return doclink('link-45', 'CopyQuestion', 'link-45');">CopyQuestion</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt>  <tt class="py-comment"># the copy for sending through the netw</tt> </tt>
<a name="L233"></a><tt class="py-lineno">233</tt>  <tt class="py-line">            <tt id="link-46" class="py-name"><a title="le2m.server.servgest.servgestgui.GestionnaireGraphique.question" class="py-name" href="#" onclick="return doclink('link-46', 'question', 'link-44');">question</a></tt><tt class="py-op">.</tt><tt id="link-47" class="py-name"><a title="le2m.questcomp.questcompmod.Question.number" class="py-name" href="#" onclick="return doclink('link-47', 'number', 'link-2');">number</a></tt> <tt class="py-op">=</tt> <tt class="py-name">compteur</tt> </tt>
<a name="L234"></a><tt class="py-lineno">234</tt>  <tt class="py-line">            <tt id="link-48" class="py-name"><a title="le2m.server.servgest.servgestgui.GestionnaireGraphique.question" class="py-name" href="#" onclick="return doclink('link-48', 'question', 'link-44');">question</a></tt><tt class="py-op">.</tt><tt id="link-49" class="py-name"><a title="le2m.questcomp.questcompmod.Question.text" class="py-name" href="#" onclick="return doclink('link-49', 'text', 'link-3');">text</a></tt> <tt class="py-op">=</tt> <tt class="py-name">q</tt><tt class="py-op">.</tt><tt class="py-name">find</tt><tt class="py-op">(</tt><tt class="py-string">"ennonce"</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt id="link-50" class="py-name"><a title="le2m.questcomp.questcompmod.Question.text" class="py-name" href="#" onclick="return doclink('link-50', 'text', 'link-3');">text</a></tt> </tt>
<a name="L235"></a><tt class="py-lineno">235</tt>  <tt class="py-line">            <tt id="link-51" class="py-name"><a title="le2m.server.servgest.servgestgui.GestionnaireGraphique.question" class="py-name" href="#" onclick="return doclink('link-51', 'question', 'link-44');">question</a></tt><tt class="py-op">.</tt><tt id="link-52" class="py-name"><a title="le2m.questcomp.questcompmod.Question.proposals" class="py-name" href="#" onclick="return doclink('link-52', 'proposals', 'link-4');">proposals</a></tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-name">p</tt><tt class="py-op">.</tt><tt id="link-53" class="py-name"><a title="le2m.questcomp.questcompmod.Question.text" class="py-name" href="#" onclick="return doclink('link-53', 'text', 'link-3');">text</a></tt> <tt class="py-keyword">for</tt> <tt class="py-name">p</tt> <tt class="py-keyword">in</tt> <tt class="py-name">q</tt><tt class="py-op">.</tt><tt class="py-name">findall</tt><tt class="py-op">(</tt><tt class="py-string">"proposition"</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L236"></a><tt class="py-lineno">236</tt>  <tt class="py-line">            <tt id="link-54" class="py-name"><a title="le2m.server.servgest.servgestgui.GestionnaireGraphique.question" class="py-name" href="#" onclick="return doclink('link-54', 'question', 'link-44');">question</a></tt><tt class="py-op">.</tt><tt id="link-55" class="py-name"><a title="le2m.questcomp.questcompmod.Question.goodanswers" class="py-name" href="#" onclick="return doclink('link-55', 'goodanswers', 'link-5');">goodanswers</a></tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-name">g</tt><tt class="py-op">.</tt><tt id="link-56" class="py-name"><a title="le2m.questcomp.questcompmod.Question.text" class="py-name" href="#" onclick="return doclink('link-56', 'text', 'link-3');">text</a></tt> <tt class="py-keyword">for</tt> <tt class="py-name">g</tt> <tt class="py-keyword">in</tt> <tt class="py-name">q</tt><tt class="py-op">.</tt><tt class="py-name">findall</tt><tt class="py-op">(</tt><tt class="py-string">"bonneReponse"</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L237"></a><tt class="py-lineno">237</tt>  <tt class="py-line">            <tt id="link-57" class="py-name"><a title="le2m.server.servgest.servgestgui.GestionnaireGraphique.question" class="py-name" href="#" onclick="return doclink('link-57', 'question', 'link-44');">question</a></tt><tt class="py-op">.</tt><tt id="link-58" class="py-name"><a title="le2m.questcomp.questcompmod.Question.explanation" class="py-name" href="#" onclick="return doclink('link-58', 'explanation', 'link-6');">explanation</a></tt> <tt class="py-op">=</tt> <tt class="py-name">q</tt><tt class="py-op">.</tt><tt class="py-name">find</tt><tt class="py-op">(</tt><tt class="py-string">"explication"</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt id="link-59" class="py-name"><a title="le2m.questcomp.questcompmod.Question.text" class="py-name" href="#" onclick="return doclink('link-59', 'text', 'link-3');">text</a></tt> </tt>
<a name="L238"></a><tt class="py-lineno">238</tt>  <tt class="py-line"> </tt>
<a name="L239"></a><tt class="py-lineno">239</tt>  <tt class="py-line">            <tt id="link-60" class="py-name"><a title="le2m.client.clt.logger
le2m.client.cltgui.cltguidialogs.logger
le2m.client.cltremote.logger
le2m.creator.creator.logger
le2m.creator.filestocopy.creator_Gui.logger
le2m.creator.filestocopy.creator_Part.logger
le2m.creator.filestocopy.creator_Remote.logger
le2m.creator.filestocopy.creator_Serv.logger
le2m.extractor.extractorgui.logger
le2m.parts.Dictator.DictatorGui.logger
le2m.parts.Dictator.DictatorPart.logger
le2m.parts.Dictator.DictatorRemote.logger
le2m.parts.Dictator.DictatorServ.logger
le2m.parts.GneezyPotter.GneezyPotterGui.logger
le2m.parts.GneezyPotter.GneezyPotterPart.logger
le2m.parts.GneezyPotter.GneezyPotterRemote.logger
le2m.parts.GneezyPotter.GneezyPotterServ.logger
le2m.parts.PublicGoodGame.PublicGoodGameGui.logger
le2m.parts.PublicGoodGame.PublicGoodGamePart.logger
le2m.parts.PublicGoodGame.PublicGoodGameRemote.logger
le2m.parts.PublicGoodGame.PublicGoodGameServ.logger
le2m.questcomp.questcompgui.logger
le2m.questcomp.questcompmod.logger
le2m.questcomp.questcomputil.logger
le2m.server.serv.logger
le2m.server.servgest.servgestbase.logger
le2m.server.servgest.servgestexpe.logger
le2m.server.servgest.servgestgroups.logger
le2m.server.servgest.servgestgui.logger
le2m.server.servgest.servgestplayers.logger
le2m.server.servgui.servguidialogs.logger
le2m.server.servgui.servguiwindows.logger
le2m.server.servparties.logger
le2m.server.servplayers.logger
le2m.util.utiltools.logger" class="py-name" href="#" onclick="return doclink('link-60', 'logger', 'link-1');">logger</a></tt><tt class="py-op">.</tt><tt id="link-61" class="py-name"><a title="le2m.server.servplayers.Joueur.info" class="py-name" href="#" onclick="return doclink('link-61', 'info', 'link-43');">info</a></tt><tt class="py-op">(</tt><tt class="py-name">qctrans</tt><tt class="py-op">(</tt><tt class="py-string">u"Add question: {quest}"</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt> </tt>
<a name="L240"></a><tt class="py-lineno">240</tt>  <tt class="py-line">                <tt class="py-name">quest</tt><tt class="py-op">=</tt><tt id="link-62" class="py-name"><a title="le2m.server.servgest.servgestgui.GestionnaireGraphique.question" class="py-name" href="#" onclick="return doclink('link-62', 'question', 'link-44');">question</a></tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L241"></a><tt class="py-lineno">241</tt>  <tt class="py-line">            <tt class="py-name">questions</tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt id="link-63" class="py-name"><a title="le2m.server.servgest.servgestgui.GestionnaireGraphique.question" class="py-name" href="#" onclick="return doclink('link-63', 'question', 'link-44');">question</a></tt><tt class="py-op">)</tt> </tt>
<a name="L242"></a><tt class="py-lineno">242</tt>  <tt class="py-line">            <tt class="py-name">compteur</tt> <tt class="py-op">+=</tt> <tt class="py-number">1</tt> </tt>
<a name="L243"></a><tt class="py-lineno">243</tt>  <tt class="py-line"> </tt>
<a name="L244"></a><tt class="py-lineno">244</tt>  <tt class="py-line">    <tt class="py-keyword">except</tt> <tt class="py-name">ElementTree</tt><tt class="py-op">.</tt><tt class="py-name">ParseError</tt> <tt class="py-keyword">as</tt> <tt class="py-name">e</tt><tt class="py-op">:</tt> </tt>
<a name="L245"></a><tt class="py-lineno">245</tt>  <tt class="py-line">        <tt id="link-64" class="py-name"><a title="le2m.client.clt.logger
le2m.client.cltgui.cltguidialogs.logger
le2m.client.cltremote.logger
le2m.creator.creator.logger
le2m.creator.filestocopy.creator_Gui.logger
le2m.creator.filestocopy.creator_Part.logger
le2m.creator.filestocopy.creator_Remote.logger
le2m.creator.filestocopy.creator_Serv.logger
le2m.extractor.extractorgui.logger
le2m.parts.Dictator.DictatorGui.logger
le2m.parts.Dictator.DictatorPart.logger
le2m.parts.Dictator.DictatorRemote.logger
le2m.parts.Dictator.DictatorServ.logger
le2m.parts.GneezyPotter.GneezyPotterGui.logger
le2m.parts.GneezyPotter.GneezyPotterPart.logger
le2m.parts.GneezyPotter.GneezyPotterRemote.logger
le2m.parts.GneezyPotter.GneezyPotterServ.logger
le2m.parts.PublicGoodGame.PublicGoodGameGui.logger
le2m.parts.PublicGoodGame.PublicGoodGamePart.logger
le2m.parts.PublicGoodGame.PublicGoodGameRemote.logger
le2m.parts.PublicGoodGame.PublicGoodGameServ.logger
le2m.questcomp.questcompgui.logger
le2m.questcomp.questcompmod.logger
le2m.questcomp.questcomputil.logger
le2m.server.serv.logger
le2m.server.servgest.servgestbase.logger
le2m.server.servgest.servgestexpe.logger
le2m.server.servgest.servgestgroups.logger
le2m.server.servgest.servgestgui.logger
le2m.server.servgest.servgestplayers.logger
le2m.server.servgui.servguidialogs.logger
le2m.server.servgui.servguiwindows.logger
le2m.server.servparties.logger
le2m.server.servplayers.logger
le2m.util.utiltools.logger" class="py-name" href="#" onclick="return doclink('link-64', 'logger', 'link-1');">logger</a></tt><tt class="py-op">.</tt><tt class="py-name">critical</tt><tt class="py-op">(</tt><tt class="py-name">e</tt><tt class="py-op">.</tt><tt id="link-65" class="py-name" targets="Variable le2m.creator.filestocopy.creator_Texts.TITLE_MSG.message=le2m.creator.filestocopy.creator_Texts.TITLE_MSG-class.html#message"><a title="le2m.creator.filestocopy.creator_Texts.TITLE_MSG.message" class="py-name" href="#" onclick="return doclink('link-65', 'message', 'link-65');">message</a></tt><tt class="py-op">)</tt> </tt>
<a name="L246"></a><tt class="py-lineno">246</tt>  <tt class="py-line"> </tt>
<a name="L247"></a><tt class="py-lineno">247</tt>  <tt class="py-line">    <tt class="py-keyword">finally</tt><tt class="py-op">:</tt> </tt>
<a name="L248"></a><tt class="py-lineno">248</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">questions</tt> </tt>
</div><a name="L249"></a><tt class="py-lineno">249</tt>  <tt class="py-line"> </tt><script type="text/javascript">
<!--
expandto(location.href);
// -->
</script>
</pre>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="le2m-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0.1 on Wed Sep 23 22:53:02 2015
    </td>
    <td align="right" class="footer">
      <a target="mainFrame" href="http://epydoc.sourceforge.net"
        >http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie();
  // -->
</script>
</body>
</html>
