<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>le2m.util.utiltools</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="le2m-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        <a href="le2m-module.html">Package&nbsp;le2m</a> ::
        <a href="le2m.util-module.html">Package&nbsp;util</a> ::
        Module&nbsp;utiltools
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="le2m.util.utiltools-pysrc.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<h1 class="epydoc">Source Code for <a href="le2m.util.utiltools-module.html">Module le2m.util.utiltools</a></h1>
<pre class="py-src">
<a name="L1"></a><tt class="py-lineno">  1</tt>  <tt class="py-line"><tt class="py-comment"># -*- coding: utf-8 -*-</tt> </tt>
<a name="L2"></a><tt class="py-lineno">  2</tt>  <tt class="py-line"><tt class="py-docstring">"""</tt> </tt>
<a name="L3"></a><tt class="py-lineno">  3</tt>  <tt class="py-line"><tt class="py-docstring">Contains usefull functions</tt> </tt>
<a name="L4"></a><tt class="py-lineno">  4</tt>  <tt class="py-line"><tt class="py-docstring">"""</tt> </tt>
<a name="L5"></a><tt class="py-lineno">  5</tt>  <tt class="py-line"> </tt>
<a name="L6"></a><tt class="py-lineno">  6</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">datetime</tt> </tt>
<a name="L7"></a><tt class="py-lineno">  7</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">random</tt> </tt>
<a name="L8"></a><tt class="py-lineno">  8</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">string</tt> </tt>
<a name="L9"></a><tt class="py-lineno">  9</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">os</tt> </tt>
<a name="L10"></a><tt class="py-lineno"> 10</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">logging</tt> </tt>
<a name="L11"></a><tt class="py-lineno"> 11</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">inspect</tt> </tt>
<a name="L12"></a><tt class="py-lineno"> 12</tt>  <tt class="py-line"> </tt>
<a name="L13"></a><tt class="py-lineno"> 13</tt>  <tt class="py-line"><tt id="link-0" class="py-name" targets="Variable le2m.client.clt.logger=le2m.client.clt-module.html#logger,Variable le2m.client.cltgui.cltguidialogs.logger=le2m.client.cltgui.cltguidialogs-module.html#logger,Variable le2m.client.cltremote.logger=le2m.client.cltremote-module.html#logger,Variable le2m.creator.creator.logger=le2m.creator.creator-module.html#logger,Variable le2m.creator.filestocopy.creator_Gui.logger=le2m.creator.filestocopy.creator_Gui-module.html#logger,Variable le2m.creator.filestocopy.creator_Part.logger=le2m.creator.filestocopy.creator_Part-module.html#logger,Variable le2m.creator.filestocopy.creator_Remote.logger=le2m.creator.filestocopy.creator_Remote-module.html#logger,Variable le2m.creator.filestocopy.creator_Serv.logger=le2m.creator.filestocopy.creator_Serv-module.html#logger,Variable le2m.extractor.extractorgui.logger=le2m.extractor.extractorgui-module.html#logger,Variable le2m.parts.Dictator.DictatorGui.logger=le2m.parts.Dictator.DictatorGui-module.html#logger,Variable le2m.parts.Dictator.DictatorPart.logger=le2m.parts.Dictator.DictatorPart-module.html#logger,Variable le2m.parts.Dictator.DictatorRemote.logger=le2m.parts.Dictator.DictatorRemote-module.html#logger,Variable le2m.parts.Dictator.DictatorServ.logger=le2m.parts.Dictator.DictatorServ-module.html#logger,Variable le2m.parts.GneezyPotter.GneezyPotterGui.logger=le2m.parts.GneezyPotter.GneezyPotterGui-module.html#logger,Variable le2m.parts.GneezyPotter.GneezyPotterPart.logger=le2m.parts.GneezyPotter.GneezyPotterPart-module.html#logger,Variable le2m.parts.GneezyPotter.GneezyPotterRemote.logger=le2m.parts.GneezyPotter.GneezyPotterRemote-module.html#logger,Variable le2m.parts.GneezyPotter.GneezyPotterServ.logger=le2m.parts.GneezyPotter.GneezyPotterServ-module.html#logger,Variable le2m.parts.PublicGoodGame.PublicGoodGameGui.logger=le2m.parts.PublicGoodGame.PublicGoodGameGui-module.html#logger,Variable le2m.parts.PublicGoodGame.PublicGoodGamePart.logger=le2m.parts.PublicGoodGame.PublicGoodGamePart-module.html#logger,Variable le2m.parts.PublicGoodGame.PublicGoodGameRemote.logger=le2m.parts.PublicGoodGame.PublicGoodGameRemote-module.html#logger,Variable le2m.parts.PublicGoodGame.PublicGoodGameServ.logger=le2m.parts.PublicGoodGame.PublicGoodGameServ-module.html#logger,Variable le2m.questcomp.questcompgui.logger=le2m.questcomp.questcompgui-module.html#logger,Variable le2m.questcomp.questcompmod.logger=le2m.questcomp.questcompmod-module.html#logger,Variable le2m.questcomp.questcomputil.logger=le2m.questcomp.questcomputil-module.html#logger,Variable le2m.server.serv.logger=le2m.server.serv-module.html#logger,Variable le2m.server.servgest.servgestbase.logger=le2m.server.servgest.servgestbase-module.html#logger,Variable le2m.server.servgest.servgestexpe.logger=le2m.server.servgest.servgestexpe-module.html#logger,Variable le2m.server.servgest.servgestgroups.logger=le2m.server.servgest.servgestgroups-module.html#logger,Variable le2m.server.servgest.servgestgui.logger=le2m.server.servgest.servgestgui-module.html#logger,Variable le2m.server.servgest.servgestplayers.logger=le2m.server.servgest.servgestplayers-module.html#logger,Variable le2m.server.servgui.servguidialogs.logger=le2m.server.servgui.servguidialogs-module.html#logger,Variable le2m.server.servgui.servguiwindows.logger=le2m.server.servgui.servguiwindows-module.html#logger,Variable le2m.server.servparties.logger=le2m.server.servparties-module.html#logger,Variable le2m.server.servplayers.logger=le2m.server.servplayers-module.html#logger,Variable le2m.util.utiltools.logger=le2m.util.utiltools-module.html#logger"><a title="le2m.client.clt.logger
le2m.client.cltgui.cltguidialogs.logger
le2m.client.cltremote.logger
le2m.creator.creator.logger
le2m.creator.filestocopy.creator_Gui.logger
le2m.creator.filestocopy.creator_Part.logger
le2m.creator.filestocopy.creator_Remote.logger
le2m.creator.filestocopy.creator_Serv.logger
le2m.extractor.extractorgui.logger
le2m.parts.Dictator.DictatorGui.logger
le2m.parts.Dictator.DictatorPart.logger
le2m.parts.Dictator.DictatorRemote.logger
le2m.parts.Dictator.DictatorServ.logger
le2m.parts.GneezyPotter.GneezyPotterGui.logger
le2m.parts.GneezyPotter.GneezyPotterPart.logger
le2m.parts.GneezyPotter.GneezyPotterRemote.logger
le2m.parts.GneezyPotter.GneezyPotterServ.logger
le2m.parts.PublicGoodGame.PublicGoodGameGui.logger
le2m.parts.PublicGoodGame.PublicGoodGamePart.logger
le2m.parts.PublicGoodGame.PublicGoodGameRemote.logger
le2m.parts.PublicGoodGame.PublicGoodGameServ.logger
le2m.questcomp.questcompgui.logger
le2m.questcomp.questcompmod.logger
le2m.questcomp.questcomputil.logger
le2m.server.serv.logger
le2m.server.servgest.servgestbase.logger
le2m.server.servgest.servgestexpe.logger
le2m.server.servgest.servgestgroups.logger
le2m.server.servgest.servgestgui.logger
le2m.server.servgest.servgestplayers.logger
le2m.server.servgui.servguidialogs.logger
le2m.server.servgui.servguiwindows.logger
le2m.server.servparties.logger
le2m.server.servplayers.logger
le2m.util.utiltools.logger" class="py-name" href="#" onclick="return doclink('link-0', 'logger', 'link-0');">logger</a></tt> <tt class="py-op">=</tt> <tt class="py-name">logging</tt><tt class="py-op">.</tt><tt class="py-name">getLogger</tt><tt class="py-op">(</tt><tt class="py-string">"le2m"</tt><tt class="py-op">)</tt> </tt>
<a name="L14"></a><tt class="py-lineno"> 14</tt>  <tt class="py-line"><tt class="py-comment"># compteur_groupe is used for creating a unique id for groups</tt> </tt>
<a name="L15"></a><tt class="py-lineno"> 15</tt>  <tt class="py-line"><tt id="link-1" class="py-name" targets="Variable le2m.util.utiltools.compteur_groupe=le2m.util.utiltools-module.html#compteur_groupe"><a title="le2m.util.utiltools.compteur_groupe" class="py-name" href="#" onclick="return doclink('link-1', 'compteur_groupe', 'link-1');">compteur_groupe</a></tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L16"></a><tt class="py-lineno"> 16</tt>  <tt class="py-line"> </tt>
<a name="L17"></a><tt class="py-lineno"> 17</tt>  <tt class="py-line"> </tt>
<a name="get_formatedtimefromseconds"></a><div id="get_formatedtimefromseconds-def"><a name="L18"></a><tt class="py-lineno"> 18</tt> <a class="py-toggle" href="#" id="get_formatedtimefromseconds-toggle" onclick="return toggle('get_formatedtimefromseconds');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.util.utiltools-module.html#get_formatedtimefromseconds">get_formatedtimefromseconds</a><tt class="py-op">(</tt><tt class="py-param">nombre_secondes</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="get_formatedtimefromseconds-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="get_formatedtimefromseconds-expanded"><a name="L19"></a><tt class="py-lineno"> 19</tt>  <tt class="py-line">    <tt class="py-docstring">"""</tt> </tt>
<a name="L20"></a><tt class="py-lineno"> 20</tt>  <tt class="py-line"><tt class="py-docstring">    Return a formated string; HH:mm:ss</tt> </tt>
<a name="L21"></a><tt class="py-lineno"> 21</tt>  <tt class="py-line"><tt class="py-docstring">    :param nombre_secondes:</tt> </tt>
<a name="L22"></a><tt class="py-lineno"> 22</tt>  <tt class="py-line"><tt class="py-docstring">    :return: str</tt> </tt>
<a name="L23"></a><tt class="py-lineno"> 23</tt>  <tt class="py-line"><tt class="py-docstring">    """</tt> </tt>
<a name="L24"></a><tt class="py-lineno"> 24</tt>  <tt class="py-line">    <tt class="py-comment"># we do the test because if type is float the str retured does not</tt> </tt>
<a name="L25"></a><tt class="py-lineno"> 25</tt>  <tt class="py-line">    <tt class="py-comment"># correspond to what is expected</tt> </tt>
<a name="L26"></a><tt class="py-lineno"> 26</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">type</tt><tt class="py-op">(</tt><tt class="py-name">nombre_secondes</tt><tt class="py-op">)</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">int</tt><tt class="py-op">:</tt> </tt>
<a name="L27"></a><tt class="py-lineno"> 27</tt>  <tt class="py-line">        <tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L28"></a><tt class="py-lineno"> 28</tt>  <tt class="py-line">            <tt class="py-name">nombre_secondes</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">nombre_secondes</tt><tt class="py-op">)</tt> </tt>
<a name="L29"></a><tt class="py-lineno"> 29</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt id="link-2" class="py-name" targets="Function le2m.util.utiltools.get_formatedtimefromseconds()=le2m.util.utiltools-module.html#get_formatedtimefromseconds"><a title="le2m.util.utiltools.get_formatedtimefromseconds" class="py-name" href="#" onclick="return doclink('link-2', 'get_formatedtimefromseconds', 'link-2');">get_formatedtimefromseconds</a></tt><tt class="py-op">(</tt><tt class="py-name">nombre_secondes</tt><tt class="py-op">)</tt> </tt>
<a name="L30"></a><tt class="py-lineno"> 30</tt>  <tt class="py-line">        <tt class="py-keyword">except</tt> <tt class="py-name">ValueError</tt><tt class="py-op">:</tt> </tt>
<a name="L31"></a><tt class="py-lineno"> 31</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt class="py-string">u"? (ValueError)"</tt> </tt>
<a name="L32"></a><tt class="py-lineno"> 32</tt>  <tt class="py-line"> </tt>
<a name="L33"></a><tt class="py-lineno"> 33</tt>  <tt class="py-line">    <tt class="py-name">get_format</tt> <tt class="py-op">=</tt> <tt class="py-keyword">lambda</tt> <tt class="py-name">v</tt><tt class="py-op">:</tt> <tt class="py-string">u"{}"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">v</tt><tt class="py-op">)</tt> <tt class="py-keyword">if</tt> <tt class="py-name">v</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">9</tt> <tt class="py-keyword">else</tt> <tt class="py-string">u"0{}"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">v</tt><tt class="py-op">)</tt> </tt>
<a name="L34"></a><tt class="py-lineno"> 34</tt>  <tt class="py-line">    <tt class="py-name">hours</tt> <tt class="py-op">=</tt> <tt class="py-name">nombre_secondes</tt> <tt class="py-op">/</tt> <tt class="py-number">3600</tt> </tt>
<a name="L35"></a><tt class="py-lineno"> 35</tt>  <tt class="py-line">    <tt class="py-name">minutes</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">nombre_secondes</tt> <tt class="py-op">%</tt> <tt class="py-number">3600</tt><tt class="py-op">)</tt> <tt class="py-op">/</tt> <tt class="py-number">60</tt> </tt>
<a name="L36"></a><tt class="py-lineno"> 36</tt>  <tt class="py-line">    <tt class="py-name">secondes</tt> <tt class="py-op">=</tt> <tt class="py-name">nombre_secondes</tt> <tt class="py-op">%</tt> <tt class="py-number">3600</tt> <tt class="py-op">%</tt> <tt class="py-number">60</tt> </tt>
<a name="L37"></a><tt class="py-lineno"> 37</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-string">u"{}:{}:{}"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">get_format</tt><tt class="py-op">(</tt><tt class="py-name">hours</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">get_format</tt><tt class="py-op">(</tt><tt class="py-name">minutes</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> </tt>
<a name="L38"></a><tt class="py-lineno"> 38</tt>  <tt class="py-line">                              <tt class="py-name">get_format</tt><tt class="py-op">(</tt><tt class="py-name">secondes</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
</div><a name="L39"></a><tt class="py-lineno"> 39</tt>  <tt class="py-line"> </tt>
<a name="L40"></a><tt class="py-lineno"> 40</tt>  <tt class="py-line"> </tt>
<a name="get_letter"></a><div id="get_letter-def"><a name="L41"></a><tt class="py-lineno"> 41</tt> <a class="py-toggle" href="#" id="get_letter-toggle" onclick="return toggle('get_letter');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.util.utiltools-module.html#get_letter">get_letter</a><tt class="py-op">(</tt><tt class="py-param">numero</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="get_letter-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="get_letter-expanded"><a name="L42"></a><tt class="py-lineno"> 42</tt>  <tt class="py-line">    <tt class="py-docstring">"""</tt> </tt>
<a name="L43"></a><tt class="py-lineno"> 43</tt>  <tt class="py-line"><tt class="py-docstring">    Renvoi la lettre majuscule correspondant au num&#233;ro.</tt> </tt>
<a name="L44"></a><tt class="py-lineno"> 44</tt>  <tt class="py-line"><tt class="py-docstring">    Si le num&#233;ro est sup&#233;rieur &#224; 25 alors ajoute 1; 2 si sup&#233;rieur &#224; 50 etc.</tt> </tt>
<a name="L45"></a><tt class="py-lineno"> 45</tt>  <tt class="py-line"><tt class="py-docstring">    :param numero:</tt> </tt>
<a name="L46"></a><tt class="py-lineno"> 46</tt>  <tt class="py-line"><tt class="py-docstring">    :return:string</tt> </tt>
<a name="L47"></a><tt class="py-lineno"> 47</tt>  <tt class="py-line"><tt class="py-docstring">    """</tt> </tt>
<a name="L48"></a><tt class="py-lineno"> 48</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">numero</tt> <tt class="py-op">&lt;</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L49"></a><tt class="py-lineno"> 49</tt>  <tt class="py-line">        <tt class="py-keyword">raise</tt> <tt class="py-name">ValueError</tt><tt class="py-op">(</tt><tt class="py-string">u"Nombre n&#233;gatif pass&#233; en param&#232;tre"</tt><tt class="py-op">)</tt> </tt>
<a name="L50"></a><tt class="py-lineno"> 50</tt>  <tt class="py-line">    <tt class="py-name">multiplicateur</tt> <tt class="py-op">=</tt> <tt class="py-name">numero</tt> <tt class="py-op">/</tt> <tt class="py-number">26</tt> </tt>
<a name="L51"></a><tt class="py-lineno"> 51</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">multiplicateur</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L52"></a><tt class="py-lineno"> 52</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-string">"{}{}"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt> </tt>
<a name="L53"></a><tt class="py-lineno"> 53</tt>  <tt class="py-line">            <tt class="py-name">string</tt><tt class="py-op">.</tt><tt class="py-name">ascii_uppercase</tt><tt class="py-op">[</tt><tt class="py-name">numero</tt> <tt class="py-op">-</tt> <tt class="py-op">(</tt><tt class="py-name">multiplicateur</tt> <tt class="py-op">*</tt> <tt class="py-number">26</tt><tt class="py-op">)</tt><tt class="py-op">]</tt><tt class="py-op">,</tt> </tt>
<a name="L54"></a><tt class="py-lineno"> 54</tt>  <tt class="py-line">            <tt class="py-name">multiplicateur</tt><tt class="py-op">)</tt> </tt>
<a name="L55"></a><tt class="py-lineno"> 55</tt>  <tt class="py-line">    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L56"></a><tt class="py-lineno"> 56</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">string</tt><tt class="py-op">.</tt><tt class="py-name">ascii_uppercase</tt><tt class="py-op">[</tt><tt class="py-name">numero</tt><tt class="py-op">]</tt> </tt>
</div><a name="L57"></a><tt class="py-lineno"> 57</tt>  <tt class="py-line"> </tt>
<a name="L58"></a><tt class="py-lineno"> 58</tt>  <tt class="py-line"> </tt>
<a name="get_letternumber"></a><div id="get_letternumber-def"><a name="L59"></a><tt class="py-lineno"> 59</tt> <a class="py-toggle" href="#" id="get_letternumber-toggle" onclick="return toggle('get_letternumber');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.util.utiltools-module.html#get_letternumber">get_letternumber</a><tt class="py-op">(</tt><tt class="py-param">lettre</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="get_letternumber-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="get_letternumber-expanded"><a name="L60"></a><tt class="py-lineno"> 60</tt>  <tt class="py-line">    <tt class="py-docstring">"""</tt> </tt>
<a name="L61"></a><tt class="py-lineno"> 61</tt>  <tt class="py-line"><tt class="py-docstring">    Renvoi le num&#233;ro de la lettre dans l'alphabet</tt> </tt>
<a name="L62"></a><tt class="py-lineno"> 62</tt>  <tt class="py-line"><tt class="py-docstring">    :param lettre:</tt> </tt>
<a name="L63"></a><tt class="py-lineno"> 63</tt>  <tt class="py-line"><tt class="py-docstring">    :return: int</tt> </tt>
<a name="L64"></a><tt class="py-lineno"> 64</tt>  <tt class="py-line"><tt class="py-docstring">    """</tt> </tt>
<a name="L65"></a><tt class="py-lineno"> 65</tt>  <tt class="py-line">    <tt class="py-name">num</tt> <tt class="py-op">=</tt> <tt class="py-op">-</tt><tt class="py-number">1</tt> </tt>
<a name="L66"></a><tt class="py-lineno"> 66</tt>  <tt class="py-line">    <tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L67"></a><tt class="py-lineno"> 67</tt>  <tt class="py-line">        <tt class="py-name">num</tt> <tt class="py-op">=</tt> <tt class="py-name">string</tt><tt class="py-op">.</tt><tt class="py-name">ascii_uppercase</tt><tt class="py-op">.</tt><tt class="py-name">index</tt><tt class="py-op">(</tt><tt class="py-name">lettre</tt><tt class="py-op">)</tt> </tt>
<a name="L68"></a><tt class="py-lineno"> 68</tt>  <tt class="py-line">    <tt class="py-keyword">except</tt> <tt class="py-name">ValueError</tt> <tt class="py-keyword">as</tt> <tt class="py-name">e</tt><tt class="py-op">:</tt> </tt>
<a name="L69"></a><tt class="py-lineno"> 69</tt>  <tt class="py-line">        <tt id="link-3" class="py-name"><a title="le2m.client.clt.logger
le2m.client.cltgui.cltguidialogs.logger
le2m.client.cltremote.logger
le2m.creator.creator.logger
le2m.creator.filestocopy.creator_Gui.logger
le2m.creator.filestocopy.creator_Part.logger
le2m.creator.filestocopy.creator_Remote.logger
le2m.creator.filestocopy.creator_Serv.logger
le2m.extractor.extractorgui.logger
le2m.parts.Dictator.DictatorGui.logger
le2m.parts.Dictator.DictatorPart.logger
le2m.parts.Dictator.DictatorRemote.logger
le2m.parts.Dictator.DictatorServ.logger
le2m.parts.GneezyPotter.GneezyPotterGui.logger
le2m.parts.GneezyPotter.GneezyPotterPart.logger
le2m.parts.GneezyPotter.GneezyPotterRemote.logger
le2m.parts.GneezyPotter.GneezyPotterServ.logger
le2m.parts.PublicGoodGame.PublicGoodGameGui.logger
le2m.parts.PublicGoodGame.PublicGoodGamePart.logger
le2m.parts.PublicGoodGame.PublicGoodGameRemote.logger
le2m.parts.PublicGoodGame.PublicGoodGameServ.logger
le2m.questcomp.questcompgui.logger
le2m.questcomp.questcompmod.logger
le2m.questcomp.questcomputil.logger
le2m.server.serv.logger
le2m.server.servgest.servgestbase.logger
le2m.server.servgest.servgestexpe.logger
le2m.server.servgest.servgestgroups.logger
le2m.server.servgest.servgestgui.logger
le2m.server.servgest.servgestplayers.logger
le2m.server.servgui.servguidialogs.logger
le2m.server.servgui.servguiwindows.logger
le2m.server.servparties.logger
le2m.server.servplayers.logger
le2m.util.utiltools.logger" class="py-name" href="#" onclick="return doclink('link-3', 'logger', 'link-0');">logger</a></tt><tt class="py-op">.</tt><tt class="py-name">warning</tt><tt class="py-op">(</tt><tt class="py-string">u"La lettre demand&#233;e n'a pas &#233;t&#233; trouv&#233;e: {}"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">e</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L70"></a><tt class="py-lineno"> 70</tt>  <tt class="py-line">    <tt class="py-keyword">finally</tt><tt class="py-op">:</tt> </tt>
<a name="L71"></a><tt class="py-lineno"> 71</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">num</tt> </tt>
</div><a name="L72"></a><tt class="py-lineno"> 72</tt>  <tt class="py-line"> </tt>
<a name="L73"></a><tt class="py-lineno"> 73</tt>  <tt class="py-line"> </tt>
<a name="get_parent_folder"></a><div id="get_parent_folder-def"><a name="L74"></a><tt class="py-lineno"> 74</tt> <a class="py-toggle" href="#" id="get_parent_folder-toggle" onclick="return toggle('get_parent_folder');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.util.utiltools-module.html#get_parent_folder">get_parent_folder</a><tt class="py-op">(</tt><tt class="py-param">fichier</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="get_parent_folder-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="get_parent_folder-expanded"><a name="L75"></a><tt class="py-lineno"> 75</tt>  <tt class="py-line">    <tt class="py-docstring">"""</tt> </tt>
<a name="L76"></a><tt class="py-lineno"> 76</tt>  <tt class="py-line"><tt class="py-docstring">    Renvoi le chemin du dossier parent au fichier</tt> </tt>
<a name="L77"></a><tt class="py-lineno"> 77</tt>  <tt class="py-line"><tt class="py-docstring">    :param fichier:</tt> </tt>
<a name="L78"></a><tt class="py-lineno"> 78</tt>  <tt class="py-line"><tt class="py-docstring">    :return: str</tt> </tt>
<a name="L79"></a><tt class="py-lineno"> 79</tt>  <tt class="py-line"><tt class="py-docstring">    """</tt> </tt>
<a name="L80"></a><tt class="py-lineno"> 80</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">path</tt><tt class="py-op">.</tt><tt class="py-name">abspath</tt><tt class="py-op">(</tt><tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">path</tt><tt class="py-op">.</tt><tt class="py-name">join</tt><tt class="py-op">(</tt><tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">path</tt><tt class="py-op">.</tt><tt class="py-name">normpath</tt><tt class="py-op">(</tt><tt class="py-name">fichier</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> </tt>
<a name="L81"></a><tt class="py-lineno"> 81</tt>  <tt class="py-line">                                        <tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">path</tt><tt class="py-op">.</tt><tt class="py-name">pardir</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
</div><a name="L82"></a><tt class="py-lineno"> 82</tt>  <tt class="py-line"> </tt>
<a name="L83"></a><tt class="py-lineno"> 83</tt>  <tt class="py-line"> </tt>
<a name="get_contenu_fichier"></a><div id="get_contenu_fichier-def"><a name="L84"></a><tt class="py-lineno"> 84</tt> <a class="py-toggle" href="#" id="get_contenu_fichier-toggle" onclick="return toggle('get_contenu_fichier');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.util.utiltools-module.html#get_contenu_fichier">get_contenu_fichier</a><tt class="py-op">(</tt><tt class="py-param">fichier</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="get_contenu_fichier-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="get_contenu_fichier-expanded"><a name="L85"></a><tt class="py-lineno"> 85</tt>  <tt class="py-line">    <tt class="py-docstring">"""</tt> </tt>
<a name="L86"></a><tt class="py-lineno"> 86</tt>  <tt class="py-line"><tt class="py-docstring">    Ouvre le fichier et renvoi son contenu.</tt> </tt>
<a name="L87"></a><tt class="py-lineno"> 87</tt>  <tt class="py-line"><tt class="py-docstring">    :param fichier: le fichier dont il faut r&#233;cup&#233;rer le contenu</tt> </tt>
<a name="L88"></a><tt class="py-lineno"> 88</tt>  <tt class="py-line"><tt class="py-docstring">    :return str</tt> </tt>
<a name="L89"></a><tt class="py-lineno"> 89</tt>  <tt class="py-line"><tt class="py-docstring">    """</tt> </tt>
<a name="L90"></a><tt class="py-lineno"> 90</tt>  <tt class="py-line">    <tt class="py-name">texte</tt> <tt class="py-op">=</tt> <tt class="py-string">u""</tt> </tt>
<a name="L91"></a><tt class="py-lineno"> 91</tt>  <tt class="py-line">    <tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L92"></a><tt class="py-lineno"> 92</tt>  <tt class="py-line">        <tt class="py-keyword">with</tt> <tt class="py-name">open</tt><tt class="py-op">(</tt><tt class="py-name">fichier</tt><tt class="py-op">,</tt> <tt class="py-string">"rb"</tt><tt class="py-op">)</tt> <tt class="py-keyword">as</tt> <tt class="py-name">fichier</tt><tt class="py-op">:</tt> </tt>
<a name="L93"></a><tt class="py-lineno"> 93</tt>  <tt class="py-line">            <tt class="py-name">texte</tt> <tt class="py-op">=</tt> <tt class="py-name">fichier</tt><tt class="py-op">.</tt><tt id="link-4" class="py-name" targets="Method le2m.util.utilqtreactor.TwistedSocketNotifier.read()=le2m.util.utilqtreactor.TwistedSocketNotifier-class.html#read"><a title="le2m.util.utilqtreactor.TwistedSocketNotifier.read" class="py-name" href="#" onclick="return doclink('link-4', 'read', 'link-4');">read</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">decode</tt><tt class="py-op">(</tt><tt class="py-string">"utf-8"</tt><tt class="py-op">)</tt> </tt>
<a name="L94"></a><tt class="py-lineno"> 94</tt>  <tt class="py-line">    <tt class="py-keyword">except</tt> <tt class="py-name">IOError</tt> <tt class="py-keyword">as</tt> <tt class="py-name">e</tt><tt class="py-op">:</tt> </tt>
<a name="L95"></a><tt class="py-lineno"> 95</tt>  <tt class="py-line">        <tt id="link-5" class="py-name"><a title="le2m.client.clt.logger
le2m.client.cltgui.cltguidialogs.logger
le2m.client.cltremote.logger
le2m.creator.creator.logger
le2m.creator.filestocopy.creator_Gui.logger
le2m.creator.filestocopy.creator_Part.logger
le2m.creator.filestocopy.creator_Remote.logger
le2m.creator.filestocopy.creator_Serv.logger
le2m.extractor.extractorgui.logger
le2m.parts.Dictator.DictatorGui.logger
le2m.parts.Dictator.DictatorPart.logger
le2m.parts.Dictator.DictatorRemote.logger
le2m.parts.Dictator.DictatorServ.logger
le2m.parts.GneezyPotter.GneezyPotterGui.logger
le2m.parts.GneezyPotter.GneezyPotterPart.logger
le2m.parts.GneezyPotter.GneezyPotterRemote.logger
le2m.parts.GneezyPotter.GneezyPotterServ.logger
le2m.parts.PublicGoodGame.PublicGoodGameGui.logger
le2m.parts.PublicGoodGame.PublicGoodGamePart.logger
le2m.parts.PublicGoodGame.PublicGoodGameRemote.logger
le2m.parts.PublicGoodGame.PublicGoodGameServ.logger
le2m.questcomp.questcompgui.logger
le2m.questcomp.questcompmod.logger
le2m.questcomp.questcomputil.logger
le2m.server.serv.logger
le2m.server.servgest.servgestbase.logger
le2m.server.servgest.servgestexpe.logger
le2m.server.servgest.servgestgroups.logger
le2m.server.servgest.servgestgui.logger
le2m.server.servgest.servgestplayers.logger
le2m.server.servgui.servguidialogs.logger
le2m.server.servgui.servguiwindows.logger
le2m.server.servparties.logger
le2m.server.servplayers.logger
le2m.util.utiltools.logger" class="py-name" href="#" onclick="return doclink('link-5', 'logger', 'link-0');">logger</a></tt><tt class="py-op">.</tt><tt class="py-name">critical</tt><tt class="py-op">(</tt> </tt>
<a name="L96"></a><tt class="py-lineno"> 96</tt>  <tt class="py-line">            <tt class="py-string">u"Problem while opening the file {}: {}"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt> </tt>
<a name="L97"></a><tt class="py-lineno"> 97</tt>  <tt class="py-line">                <tt class="py-name">fichier</tt><tt class="py-op">,</tt> <tt class="py-name">e</tt><tt class="py-op">.</tt><tt id="link-6" class="py-name" targets="Variable le2m.creator.filestocopy.creator_Texts.TITLE_MSG.message=le2m.creator.filestocopy.creator_Texts.TITLE_MSG-class.html#message"><a title="le2m.creator.filestocopy.creator_Texts.TITLE_MSG.message" class="py-name" href="#" onclick="return doclink('link-6', 'message', 'link-6');">message</a></tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L98"></a><tt class="py-lineno"> 98</tt>  <tt class="py-line">    <tt class="py-keyword">finally</tt><tt class="py-op">:</tt> </tt>
<a name="L99"></a><tt class="py-lineno"> 99</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">texte</tt> </tt>
</div><a name="L100"></a><tt class="py-lineno">100</tt>  <tt class="py-line"> </tt>
<a name="L101"></a><tt class="py-lineno">101</tt>  <tt class="py-line"> </tt>
<a name="get_monnaie"></a><div id="get_monnaie-def"><a name="L102"></a><tt class="py-lineno">102</tt> <a class="py-toggle" href="#" id="get_monnaie-toggle" onclick="return toggle('get_monnaie');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.util.utiltools-module.html#get_monnaie">get_monnaie</a><tt class="py-op">(</tt><tt class="py-param">nombre</tt><tt class="py-op">,</tt> <tt class="py-param">monnaie</tt><tt class="py-op">=</tt><tt class="py-string">u"ecu"</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="get_monnaie-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="get_monnaie-expanded"><a name="L103"></a><tt class="py-lineno">103</tt>  <tt class="py-line">    <tt class="py-docstring">"""</tt> </tt>
<a name="L104"></a><tt class="py-lineno">104</tt>  <tt class="py-line"><tt class="py-docstring">    DEPRECATED: Utiliser get_pluriel &#224; la place</tt> </tt>
<a name="L105"></a><tt class="py-lineno">105</tt>  <tt class="py-line"><tt class="py-docstring">    Renvoi la monnnaie avec ou sans s selon le nombre</tt> </tt>
<a name="L106"></a><tt class="py-lineno">106</tt>  <tt class="py-line"><tt class="py-docstring">    :param nombre: le nombre utilis&#233; avec la monnaie</tt> </tt>
<a name="L107"></a><tt class="py-lineno">107</tt>  <tt class="py-line"><tt class="py-docstring">    :param monnaie: la monnaie (par d&#233;faut ecu)</tt> </tt>
<a name="L108"></a><tt class="py-lineno">108</tt>  <tt class="py-line"><tt class="py-docstring">    :return: string</tt> </tt>
<a name="L109"></a><tt class="py-lineno">109</tt>  <tt class="py-line"><tt class="py-docstring">    """</tt> </tt>
<a name="L110"></a><tt class="py-lineno">110</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-string">u"{}s"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">monnaie</tt><tt class="py-op">)</tt> <tt class="py-keyword">if</tt> <tt class="py-name">nombre</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">1</tt> <tt class="py-keyword">else</tt> <tt class="py-name">monnaie</tt> </tt>
</div><a name="L111"></a><tt class="py-lineno">111</tt>  <tt class="py-line"> </tt>
<a name="L112"></a><tt class="py-lineno">112</tt>  <tt class="py-line"> </tt>
<a name="get_pluriel"></a><div id="get_pluriel-def"><a name="L113"></a><tt class="py-lineno">113</tt> <a class="py-toggle" href="#" id="get_pluriel-toggle" onclick="return toggle('get_pluriel');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.util.utiltools-module.html#get_pluriel">get_pluriel</a><tt class="py-op">(</tt><tt class="py-param">quantite</tt><tt class="py-op">,</tt> <tt class="py-param">mot</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="get_pluriel-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="get_pluriel-expanded"><a name="L114"></a><tt class="py-lineno">114</tt>  <tt class="py-line">    <tt class="py-docstring">"""</tt> </tt>
<a name="L115"></a><tt class="py-lineno">115</tt>  <tt class="py-line"><tt class="py-docstring">    Renvoi la quantit&#233; + le mot, avec un s si quantit&#233; sup &#224; 1</tt> </tt>
<a name="L116"></a><tt class="py-lineno">116</tt>  <tt class="py-line"><tt class="py-docstring">    :param quantite</tt> </tt>
<a name="L117"></a><tt class="py-lineno">117</tt>  <tt class="py-line"><tt class="py-docstring">    :param mot</tt> </tt>
<a name="L118"></a><tt class="py-lineno">118</tt>  <tt class="py-line"><tt class="py-docstring">    :return str</tt> </tt>
<a name="L119"></a><tt class="py-lineno">119</tt>  <tt class="py-line"><tt class="py-docstring">    """</tt> </tt>
<a name="L120"></a><tt class="py-lineno">120</tt>  <tt class="py-line">    <tt class="py-name">get_format</tt> <tt class="py-op">=</tt> <tt class="py-keyword">lambda</tt> <tt class="py-name">val</tt><tt class="py-op">:</tt> <tt class="py-string">u"{:.2f}"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">val</tt><tt class="py-op">)</tt> <tt class="py-keyword">if</tt> <tt class="py-name">type</tt><tt class="py-op">(</tt><tt class="py-name">val</tt><tt class="py-op">)</tt> <tt class="py-keyword">is</tt> <tt class="py-name">float</tt> <tt class="py-keyword">else</tt> \ </tt>
<a name="L121"></a><tt class="py-lineno">121</tt>  <tt class="py-line">        <tt class="py-string">u"{}"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">val</tt><tt class="py-op">)</tt> </tt>
<a name="L122"></a><tt class="py-lineno">122</tt>  <tt class="py-line">    <tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L123"></a><tt class="py-lineno">123</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">abs</tt><tt class="py-op">(</tt><tt class="py-name">quantite</tt><tt class="py-op">)</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">1</tt><tt class="py-op">:</tt> </tt>
<a name="L124"></a><tt class="py-lineno">124</tt>  <tt class="py-line">            <tt class="py-name">txt</tt> <tt class="py-op">=</tt> <tt class="py-string">u"{} {}s"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">get_format</tt><tt class="py-op">(</tt><tt class="py-name">quantite</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">mot</tt><tt class="py-op">)</tt> </tt>
<a name="L125"></a><tt class="py-lineno">125</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L126"></a><tt class="py-lineno">126</tt>  <tt class="py-line">            <tt class="py-name">txt</tt> <tt class="py-op">=</tt> <tt class="py-string">u"{} {}"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt class="py-name">get_format</tt><tt class="py-op">(</tt><tt class="py-name">quantite</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">mot</tt><tt class="py-op">)</tt> </tt>
<a name="L127"></a><tt class="py-lineno">127</tt>  <tt class="py-line">    <tt class="py-keyword">except</tt> <tt class="py-name">TypeError</tt><tt class="py-op">:</tt> </tt>
<a name="L128"></a><tt class="py-lineno">128</tt>  <tt class="py-line">        <tt class="py-name">type_q</tt> <tt class="py-op">=</tt> <tt class="py-name">type</tt><tt class="py-op">(</tt><tt class="py-name">quantite</tt><tt class="py-op">)</tt> </tt>
<a name="L129"></a><tt class="py-lineno">129</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-op">(</tt><tt class="py-name">type_q</tt> <tt class="py-keyword">is</tt> <tt class="py-name">int</tt> <tt class="py-keyword">or</tt> <tt class="py-name">type_q</tt> <tt class="py-keyword">is</tt> <tt class="py-name">float</tt> <tt class="py-keyword">or</tt> <tt class="py-name">type_q</tt> <tt class="py-keyword">is</tt> <tt class="py-name">str</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L130"></a><tt class="py-lineno">130</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt class="py-string">u"? (not int or float or str) "</tt> <tt class="py-op">+</tt> <tt class="py-name">mot</tt> </tt>
<a name="L131"></a><tt class="py-lineno">131</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">type_q</tt> <tt class="py-keyword">is</tt> <tt class="py-name">str</tt><tt class="py-op">:</tt> </tt>
<a name="L132"></a><tt class="py-lineno">132</tt>  <tt class="py-line">            <tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L133"></a><tt class="py-lineno">133</tt>  <tt class="py-line">                <tt class="py-name">quantite</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">quantite</tt><tt class="py-op">)</tt> </tt>
<a name="L134"></a><tt class="py-lineno">134</tt>  <tt class="py-line">            <tt class="py-keyword">except</tt> <tt class="py-name">ValueError</tt><tt class="py-op">:</tt> </tt>
<a name="L135"></a><tt class="py-lineno">135</tt>  <tt class="py-line">                <tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L136"></a><tt class="py-lineno">136</tt>  <tt class="py-line">                    <tt class="py-name">quantite</tt> <tt class="py-op">=</tt> <tt class="py-name">float</tt><tt class="py-op">(</tt><tt class="py-name">quantite</tt><tt class="py-op">)</tt> </tt>
<a name="L137"></a><tt class="py-lineno">137</tt>  <tt class="py-line">                <tt class="py-keyword">except</tt> <tt class="py-name">ValueError</tt><tt class="py-op">:</tt> </tt>
<a name="L138"></a><tt class="py-lineno">138</tt>  <tt class="py-line">                    <tt class="py-keyword">return</tt> <tt class="py-string">u"? (str) "</tt> <tt class="py-op">+</tt> <tt class="py-name">mot</tt> </tt>
<a name="L139"></a><tt class="py-lineno">139</tt>  <tt class="py-line">                <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L140"></a><tt class="py-lineno">140</tt>  <tt class="py-line">                    <tt class="py-keyword">return</tt> <tt id="link-7" class="py-name" targets="Function le2m.util.utiltools.get_pluriel()=le2m.util.utiltools-module.html#get_pluriel"><a title="le2m.util.utiltools.get_pluriel" class="py-name" href="#" onclick="return doclink('link-7', 'get_pluriel', 'link-7');">get_pluriel</a></tt><tt class="py-op">(</tt><tt class="py-name">quantite</tt><tt class="py-op">,</tt> <tt class="py-name">mot</tt><tt class="py-op">)</tt> </tt>
<a name="L141"></a><tt class="py-lineno">141</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L142"></a><tt class="py-lineno">142</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt id="link-8" class="py-name"><a title="le2m.util.utiltools.get_pluriel" class="py-name" href="#" onclick="return doclink('link-8', 'get_pluriel', 'link-7');">get_pluriel</a></tt><tt class="py-op">(</tt><tt class="py-name">quantite</tt><tt class="py-op">,</tt> <tt class="py-name">mot</tt><tt class="py-op">)</tt> </tt>
<a name="L143"></a><tt class="py-lineno">143</tt>  <tt class="py-line">    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L144"></a><tt class="py-lineno">144</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">txt</tt> </tt>
</div><a name="L145"></a><tt class="py-lineno">145</tt>  <tt class="py-line"> </tt>
<a name="L146"></a><tt class="py-lineno">146</tt>  <tt class="py-line"> </tt>
<a name="get_module_info"></a><div id="get_module_info-def"><a name="L147"></a><tt class="py-lineno">147</tt> <a class="py-toggle" href="#" id="get_module_info-toggle" onclick="return toggle('get_module_info');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.util.utiltools-module.html#get_module_info">get_module_info</a><tt class="py-op">(</tt><tt class="py-param">module</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="get_module_info-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="get_module_info-expanded"><a name="L148"></a><tt class="py-lineno">148</tt>  <tt class="py-line">    <tt class="py-docstring">"""</tt> </tt>
<a name="L149"></a><tt class="py-lineno">149</tt>  <tt class="py-line"><tt class="py-docstring">    Return a list with the keys and values of the attributes of the module</tt> </tt>
<a name="L150"></a><tt class="py-lineno">150</tt>  <tt class="py-line"><tt class="py-docstring">    :param module:</tt> </tt>
<a name="L151"></a><tt class="py-lineno">151</tt>  <tt class="py-line"><tt class="py-docstring">    :return: str</tt> </tt>
<a name="L152"></a><tt class="py-lineno">152</tt>  <tt class="py-line"><tt class="py-docstring">    """</tt> </tt>
<a name="L153"></a><tt class="py-lineno">153</tt>  <tt class="py-line">    <tt class="py-name">txt</tt> <tt class="py-op">=</tt> <tt class="py-string">u""</tt> </tt>
<a name="L154"></a><tt class="py-lineno">154</tt>  <tt class="py-line">    <tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L155"></a><tt class="py-lineno">155</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt><tt class="py-op">(</tt><tt id="link-9" class="py-name" targets="Variable le2m.server.servgest.servgestbase.Session.nom=le2m.server.servgest.servgestbase.Session-class.html#nom,Variable le2m.server.servparties.Partie.nom=le2m.server.servparties.Partie-class.html#nom,Variable le2m.server.servplayers.Joueur.nom=le2m.server.servplayers.Joueur-class.html#nom"><a title="le2m.server.servgest.servgestbase.Session.nom
le2m.server.servparties.Partie.nom
le2m.server.servplayers.Joueur.nom" class="py-name" href="#" onclick="return doclink('link-9', 'nom', 'link-9');">nom</a></tt><tt class="py-op">,</tt> <tt class="py-name">valeur</tt><tt class="py-op">)</tt> <tt class="py-keyword">in</tt> <tt class="py-name">inspect</tt><tt class="py-op">.</tt><tt class="py-name">getmembers</tt><tt class="py-op">(</tt><tt class="py-name">module</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L156"></a><tt class="py-lineno">156</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt id="link-10" class="py-name"><a title="le2m.server.servgest.servgestbase.Session.nom
le2m.server.servparties.Partie.nom
le2m.server.servplayers.Joueur.nom" class="py-name" href="#" onclick="return doclink('link-10', 'nom', 'link-9');">nom</a></tt> <tt class="py-keyword">in</tt> <tt class="py-op">[</tt><tt class="py-string">"__builtins__"</tt><tt class="py-op">,</tt> <tt class="py-string">"__name__"</tt><tt class="py-op">,</tt> <tt class="py-string">"__file__"</tt><tt class="py-op">,</tt> <tt class="py-string">"__doc__"</tt><tt class="py-op">,</tt> </tt>
<a name="L157"></a><tt class="py-lineno">157</tt>  <tt class="py-line">                       <tt class="py-string">"__package__"</tt><tt class="py-op">]</tt><tt class="py-op">:</tt> </tt>
<a name="L158"></a><tt class="py-lineno">158</tt>  <tt class="py-line">                <tt class="py-keyword">continue</tt> </tt>
<a name="L159"></a><tt class="py-lineno">159</tt>  <tt class="py-line">            <tt class="py-name">txt</tt> <tt class="py-op">+=</tt> <tt class="py-string">u"- {}: {}\n"</tt><tt class="py-op">.</tt><tt class="py-name">format</tt><tt class="py-op">(</tt><tt id="link-11" class="py-name"><a title="le2m.server.servgest.servgestbase.Session.nom
le2m.server.servparties.Partie.nom
le2m.server.servplayers.Joueur.nom" class="py-name" href="#" onclick="return doclink('link-11', 'nom', 'link-9');">nom</a></tt><tt class="py-op">,</tt> <tt class="py-name">valeur</tt><tt class="py-op">)</tt> </tt>
<a name="L160"></a><tt class="py-lineno">160</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">txt</tt> </tt>
<a name="L161"></a><tt class="py-lineno">161</tt>  <tt class="py-line">    <tt class="py-keyword">except</tt> <tt class="py-name">TypeError</tt> <tt class="py-keyword">as</tt> <tt class="py-name">e</tt><tt class="py-op">:</tt> </tt>
<a name="L162"></a><tt class="py-lineno">162</tt>  <tt class="py-line">        <tt id="link-12" class="py-name"><a title="le2m.client.clt.logger
le2m.client.cltgui.cltguidialogs.logger
le2m.client.cltremote.logger
le2m.creator.creator.logger
le2m.creator.filestocopy.creator_Gui.logger
le2m.creator.filestocopy.creator_Part.logger
le2m.creator.filestocopy.creator_Remote.logger
le2m.creator.filestocopy.creator_Serv.logger
le2m.extractor.extractorgui.logger
le2m.parts.Dictator.DictatorGui.logger
le2m.parts.Dictator.DictatorPart.logger
le2m.parts.Dictator.DictatorRemote.logger
le2m.parts.Dictator.DictatorServ.logger
le2m.parts.GneezyPotter.GneezyPotterGui.logger
le2m.parts.GneezyPotter.GneezyPotterPart.logger
le2m.parts.GneezyPotter.GneezyPotterRemote.logger
le2m.parts.GneezyPotter.GneezyPotterServ.logger
le2m.parts.PublicGoodGame.PublicGoodGameGui.logger
le2m.parts.PublicGoodGame.PublicGoodGamePart.logger
le2m.parts.PublicGoodGame.PublicGoodGameRemote.logger
le2m.parts.PublicGoodGame.PublicGoodGameServ.logger
le2m.questcomp.questcompgui.logger
le2m.questcomp.questcompmod.logger
le2m.questcomp.questcomputil.logger
le2m.server.serv.logger
le2m.server.servgest.servgestbase.logger
le2m.server.servgest.servgestexpe.logger
le2m.server.servgest.servgestgroups.logger
le2m.server.servgest.servgestgui.logger
le2m.server.servgest.servgestplayers.logger
le2m.server.servgui.servguidialogs.logger
le2m.server.servgui.servguiwindows.logger
le2m.server.servparties.logger
le2m.server.servplayers.logger
le2m.util.utiltools.logger" class="py-name" href="#" onclick="return doclink('link-12', 'logger', 'link-0');">logger</a></tt><tt class="py-op">.</tt><tt class="py-name">error</tt><tt class="py-op">(</tt><tt class="py-name">e</tt><tt class="py-op">.</tt><tt id="link-13" class="py-name"><a title="le2m.creator.filestocopy.creator_Texts.TITLE_MSG.message" class="py-name" href="#" onclick="return doclink('link-13', 'message', 'link-6');">message</a></tt><tt class="py-op">)</tt> </tt>
<a name="L163"></a><tt class="py-lineno">163</tt>  <tt class="py-line"> </tt>
<a name="L164"></a><tt class="py-lineno">164</tt>  <tt class="py-line">    <tt class="py-keyword">finally</tt><tt class="py-op">:</tt> </tt>
<a name="L165"></a><tt class="py-lineno">165</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">txt</tt> </tt>
</div><a name="L166"></a><tt class="py-lineno">166</tt>  <tt class="py-line"> </tt>
<a name="L167"></a><tt class="py-lineno">167</tt>  <tt class="py-line"> </tt>
<a name="former_groupes"></a><div id="former_groupes-def"><a name="L168"></a><tt class="py-lineno">168</tt> <a class="py-toggle" href="#" id="former_groupes-toggle" onclick="return toggle('former_groupes');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="le2m.util.utiltools-module.html#former_groupes">former_groupes</a><tt class="py-op">(</tt><tt class="py-param">population</tt><tt class="py-op">,</tt> <tt class="py-param">taille</tt><tt class="py-op">,</tt> <tt class="py-param">prefixeid</tt><tt class="py-op">=</tt><tt class="py-name">None</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="former_groupes-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="former_groupes-expanded"><a name="L169"></a><tt class="py-lineno">169</tt>  <tt class="py-line">    <tt class="py-docstring">"""</tt> </tt>
<a name="L170"></a><tt class="py-lineno">170</tt>  <tt class="py-line"><tt class="py-docstring">    Forme des groupes</tt> </tt>
<a name="L171"></a><tt class="py-lineno">171</tt>  <tt class="py-line"><tt class="py-docstring">    :param population: une liste d'identifiants</tt> </tt>
<a name="L172"></a><tt class="py-lineno">172</tt>  <tt class="py-line"><tt class="py-docstring">    :param taille: la taille des groupes &#224; former</tt> </tt>
<a name="L173"></a><tt class="py-lineno">173</tt>  <tt class="py-line"><tt class="py-docstring">    :param prefixeid: le pr&#233;fixe d'identifiant de groupe. Par d&#233;faut la</tt> </tt>
<a name="L174"></a><tt class="py-lineno">174</tt>  <tt class="py-line"><tt class="py-docstring">    date du jour avec l'heure, selon format %Y%m%d%H%m</tt> </tt>
<a name="L175"></a><tt class="py-lineno">175</tt>  <tt class="py-line"><tt class="py-docstring">    :return: dict</tt> </tt>
<a name="L176"></a><tt class="py-lineno">176</tt>  <tt class="py-line"><tt class="py-docstring">    """</tt> </tt>
<a name="L177"></a><tt class="py-lineno">177</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">type</tt><tt class="py-op">(</tt><tt class="py-name">population</tt><tt class="py-op">)</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">list</tt><tt class="py-op">:</tt> </tt>
<a name="L178"></a><tt class="py-lineno">178</tt>  <tt class="py-line">        <tt class="py-keyword">raise</tt> <tt class="py-name">ValueError</tt><tt class="py-op">(</tt><tt class="py-string">u"population doit &#234;tre une liste"</tt><tt class="py-op">)</tt> </tt>
<a name="L179"></a><tt class="py-lineno">179</tt>  <tt class="py-line">    <tt class="py-keyword">elif</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">population</tt><tt class="py-op">)</tt> <tt class="py-op">%</tt> <tt class="py-name">taille</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L180"></a><tt class="py-lineno">180</tt>  <tt class="py-line">        <tt class="py-keyword">raise</tt> <tt class="py-name">ValueError</tt><tt class="py-op">(</tt><tt class="py-string">u"il faut pouvoir former un nombre entier de groupes"</tt><tt class="py-op">)</tt> </tt>
<a name="L181"></a><tt class="py-lineno">181</tt>  <tt class="py-line"> </tt>
<a name="L182"></a><tt class="py-lineno">182</tt>  <tt class="py-line">    <tt class="py-name">nb</tt> <tt class="py-op">=</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">population</tt><tt class="py-op">)</tt> <tt class="py-op">/</tt> <tt class="py-name">taille</tt> </tt>
<a name="L183"></a><tt class="py-lineno">183</tt>  <tt class="py-line">    <tt class="py-name">dispos</tt> <tt class="py-op">=</tt> <tt class="py-name">population</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L184"></a><tt class="py-lineno">184</tt>  <tt class="py-line">    <tt class="py-name">pre_id</tt> <tt class="py-op">=</tt> <tt class="py-name">prefixeid</tt> <tt class="py-keyword">or</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">now</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">strftime</tt><tt class="py-op">(</tt><tt class="py-string">"%Y%m%d%H%M"</tt><tt class="py-op">)</tt> </tt>
<a name="L185"></a><tt class="py-lineno">185</tt>  <tt class="py-line">    <tt class="py-name">groupes</tt> <tt class="py-op">=</tt> <tt class="py-name">dict</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L186"></a><tt class="py-lineno">186</tt>  <tt class="py-line">    <tt class="py-keyword">global</tt> <tt id="link-14" class="py-name"><a title="le2m.util.utiltools.compteur_groupe" class="py-name" href="#" onclick="return doclink('link-14', 'compteur_groupe', 'link-1');">compteur_groupe</a></tt> </tt>
<a name="L187"></a><tt class="py-lineno">187</tt>  <tt class="py-line"> </tt>
<a name="L188"></a><tt class="py-lineno">188</tt>  <tt class="py-line">    <tt class="py-keyword">for</tt> <tt class="py-name">i</tt> <tt class="py-keyword">in</tt> <tt class="py-name">xrange</tt><tt class="py-op">(</tt><tt class="py-name">nb</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L189"></a><tt class="py-lineno">189</tt>  <tt class="py-line">        <tt class="py-name">g_id</tt> <tt class="py-op">=</tt> <tt class="py-name">pre_id</tt> <tt class="py-op">+</tt> <tt class="py-name">str</tt><tt class="py-op">(</tt><tt id="link-15" class="py-name"><a title="le2m.util.utiltools.compteur_groupe" class="py-name" href="#" onclick="return doclink('link-15', 'compteur_groupe', 'link-1');">compteur_groupe</a></tt><tt class="py-op">)</tt> </tt>
<a name="L190"></a><tt class="py-lineno">190</tt>  <tt class="py-line">        <tt class="py-name">groupes</tt><tt class="py-op">[</tt><tt class="py-name">g_id</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-op">]</tt> </tt>
<a name="L191"></a><tt class="py-lineno">191</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-name">j</tt> <tt class="py-keyword">in</tt> <tt class="py-name">xrange</tt><tt class="py-op">(</tt><tt class="py-name">taille</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L192"></a><tt class="py-lineno">192</tt>  <tt class="py-line">            <tt class="py-name">selec</tt> <tt class="py-op">=</tt> <tt class="py-name">random</tt><tt class="py-op">.</tt><tt class="py-name">choice</tt><tt class="py-op">(</tt><tt class="py-name">dispos</tt><tt class="py-op">)</tt> </tt>
<a name="L193"></a><tt class="py-lineno">193</tt>  <tt class="py-line">            <tt class="py-name">groupes</tt><tt class="py-op">[</tt><tt class="py-name">g_id</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt class="py-name">selec</tt><tt class="py-op">)</tt> </tt>
<a name="L194"></a><tt class="py-lineno">194</tt>  <tt class="py-line">            <tt class="py-name">dispos</tt><tt class="py-op">.</tt><tt class="py-name">remove</tt><tt class="py-op">(</tt><tt class="py-name">selec</tt><tt class="py-op">)</tt> </tt>
<a name="L195"></a><tt class="py-lineno">195</tt>  <tt class="py-line">        <tt id="link-16" class="py-name"><a title="le2m.util.utiltools.compteur_groupe" class="py-name" href="#" onclick="return doclink('link-16', 'compteur_groupe', 'link-1');">compteur_groupe</a></tt> <tt class="py-op">+=</tt> <tt class="py-number">1</tt> </tt>
<a name="L196"></a><tt class="py-lineno">196</tt>  <tt class="py-line"> </tt>
<a name="L197"></a><tt class="py-lineno">197</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-name">groupes</tt> </tt>
</div><a name="L198"></a><tt class="py-lineno">198</tt>  <tt class="py-line"> </tt><script type="text/javascript">
<!--
expandto(location.href);
// -->
</script>
</pre>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="le2m-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0.1 on Wed Sep 23 22:53:01 2015
    </td>
    <td align="right" class="footer">
      <a target="mainFrame" href="http://epydoc.sourceforge.net"
        >http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie();
  // -->
</script>
</body>
</html>
